<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孟祥月的博客</title>
  <subtitle>昨晚多几分钟的准备，今天少几小时的麻烦。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mengxiangyue.com/"/>
  <updated>2016-07-18T14:58:06.000Z</updated>
  <id>http://mengxiangyue.com/</id>
  
  <author>
    <name>孟祥月</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MShare第二期干货分享:聊聊Android那些事</title>
    <link href="http://mengxiangyue.com/2016/07/18/MShare%E7%AC%AC%E4%BA%8C%E6%9C%9F%E5%B9%B2%E8%B4%A7%E5%88%86%E4%BA%AB-%E8%81%8A%E8%81%8AAndroid%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://mengxiangyue.com/2016/07/18/MShare第二期干货分享-聊聊Android那些事/</id>
    <published>2016-07-18T13:20:52.000Z</published>
    <updated>2016-07-18T14:58:06.000Z</updated>
    
    <content type="html">&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.07.18/00.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;7月2号，我们在&lt;a href=&quot;http://www.people-squared.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;联合创业办公社[People Squared,简称P2]&lt;/a&gt;举办了MShare的第二场线下的分享会：聊聊Android那些事。这次活动我们请到了问吧科技的张万新、新浪微博的高一航、宜信的徐金山分享他们在工作中的一些总结。下面是分享的题目及PPT：   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;张万新 深入解析Handler的原理以及Handler的使用“姿势”&lt;br&gt;配套的文章&lt;a href=&quot;https://github.com/wswenyue/talk/blob/gh-pages/talk_Android_Handler.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入解析Handler原理以及Handler的使用姿势&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;高一航 动态代理模式项目实战&lt;/li&gt;
&lt;li&gt;徐金山 Android应用架构设计心得分享&lt;br&gt;&lt;a href=&quot;https://github.com/MShareGroup/MShare_Events/tree/master/%E7%AC%AC%E4%BA%8C%E6%9C%9F_Android_20160702&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PPT及Demo地址&lt;/a&gt; 建议大家关注该仓库，后续的PPT及Demo都会放到这个仓库中。  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本次活动中本来计划录屏，但是由于中间的操作问题，造成了最后的录制视频图像不全，无法观看，所以很遗憾本次没有录屏视频，以后我们会尽力做好。&lt;/p&gt;
&lt;h3 id=&quot;MShare招募成员&quot;&gt;&lt;a href=&quot;#MShare招募成员&quot; class=&quot;headerlink&quot; title=&quot;MShare招募成员&quot;&gt;&lt;/a&gt;MShare招募成员&lt;/h3&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;MShare也在招募一些成员，要求爱分享、技术中级水平（初级如果特别爱学习也可以），有想加入的联系&lt;a href=&quot;http://weibo.com/gaoyihang?is_all=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@写代码的高小土&lt;/a&gt;或者联系我&lt;a href=&quot;http://weibo.com/u/1750643861?is_all=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@孟祥月_iOS&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本次由MShare小组内的高一航&lt;a href=&quot;http://weibo.com/gaoyihang?is_all=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@写代码的高小土&lt;/a&gt;负责组织，十分感谢他的辛苦组织。还感谢&lt;a href=&quot;http://gold.xitu.io/welcome&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;掘金&lt;/a&gt;、&lt;a href=&quot;https://coding.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;coding&lt;/a&gt;、&lt;a href=&quot;http://www.smartdot.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慧点科技&lt;/a&gt;、&lt;a href=&quot;https://segmentfault.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;segmentfault&lt;/a&gt;、&lt;a href=&quot;http://fir.im/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fir.im&lt;/a&gt;、&lt;a href=&quot;http://www.cocoachina.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cocoachina&lt;/a&gt;、&lt;a href=&quot;http://www.tuicool.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;推酷&lt;/a&gt;、&lt;a href=&quot;http://www.deveco.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;deveco&lt;/a&gt;、&lt;a href=&quot;http://toutiao.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发者头条&lt;/a&gt;、&lt;a href=&quot;http://www.people-squared.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;联合创业办公社[People Squared,简称P2]&lt;/a&gt;、&lt;a href=&quot;http://www.imooc.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慕课网&lt;/a&gt;的帮助。  &lt;/p&gt;
&lt;p&gt;下面是活动的介绍及现场的一些照片：&lt;br&gt;&lt;img src=&quot;/images/2016.07.18/01.JPG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.07.18/02.JPG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.07.18/03.JPG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.07.18/04.JPG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.07.18/05.JPG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.07.18/06.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div  align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.07.18/00.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;7月2号，我们在&lt;a href=&quot;http://www.people-squared.com/&quot;&gt;联合创业办公社[People Squared,简称P2]&lt;/a&gt;举办了MShare的第二场线下的分享会：聊聊Android那些事。这次活动我们请到了问吧科技的张万新、新浪微博的高一航、宜信的徐金山分享他们在工作中的一些总结。下面是分享的题目及PPT：   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;张万新 深入解析Handler的原理以及Handler的使用“姿势”&lt;br&gt;配套的文章&lt;a href=&quot;https://github.com/wswenyue/talk/blob/gh-pages/talk_Android_Handler.md&quot;&gt;深入解析Handler原理以及Handler的使用姿势&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;高一航 动态代理模式项目实战&lt;/li&gt;
&lt;li&gt;徐金山 Android应用架构设计心得分享&lt;br&gt;&lt;a href=&quot;https://github.com/MShareGroup/MShare_Events/tree/master/%E7%AC%AC%E4%BA%8C%E6%9C%9F_Android_20160702&quot;&gt;PPT及Demo地址&lt;/a&gt; 建议大家关注该仓库，后续的PPT及Demo都会放到这个仓库中。  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本次活动中本来计划录屏，但是由于中间的操作问题，造成了最后的录制视频图像不全，无法观看，所以很遗憾本次没有录屏视频，以后我们会尽力做好。&lt;/p&gt;
&lt;h3 id=&quot;MShare招募成员&quot;&gt;&lt;a href=&quot;#MShare招募成员&quot; class=&quot;headerlink&quot; title=&quot;MShare招募成员&quot;&gt;&lt;/a&gt;MShare招募成员&lt;/h3&gt;
    
    </summary>
    
    
      <category term="MShare" scheme="http://mengxiangyue.com/tags/MShare/"/>
    
  </entry>
  
  <entry>
    <title>7月2号一场有料的Android分享会，约么？</title>
    <link href="http://mengxiangyue.com/2016/06/28/7%E6%9C%882%E5%8F%B7%E4%B8%80%E5%9C%BA%E6%9C%89%E6%96%99%E7%9A%84Android%E5%88%86%E4%BA%AB%E4%BC%9A%EF%BC%8C%E7%BA%A6%E4%B9%88%EF%BC%9F/"/>
    <id>http://mengxiangyue.com/2016/06/28/7月2号一场有料的Android分享会，约么？/</id>
    <published>2016-06-28T00:55:33.000Z</published>
    <updated>2016-06-28T01:06:34.000Z</updated>
    
    <content type="html">&lt;p&gt;这几天在筹划MShare第二期的Android的分享会（下面有图片介绍这次活动），有几个朋友问我你怎么不继续做iOS了（因为我做过第一期的iOS的分享会，效果还不错，介绍地址&lt;a href=&quot;http://mengxiangyue.com/2016/04/25/%E4%B8%80%E5%9C%BA%E7%AB%99%E7%9D%80%E5%90%AC%E5%AE%8C%E7%9A%84iOS%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%E4%BC%9A/&quot;&gt; 一场站着听完的iOS技术分享会&lt;/a&gt;）,怎么跑来做Android了呢？我说，也没有什么特别的原因，我一个做iOS的就是想去试试，尽量准备干货，看看能不能做一期还算不太差的Android的分享会。    &lt;/p&gt;
&lt;p&gt;在这次分享会上我们尽量促进大家之间的交流，因为我们发现，我参加过一些分享会，基本上都是听完了，旁边的人都不认识，更别说后期交流了。所以我想通过这样的活动，给参加的人创造一个能够交流的空间，交流的过程中我们进步的也会更快。我们希望通过交流分享，帮助程序员有一个提高。   &lt;/p&gt;
&lt;p&gt;另外本次活动准备的有点仓促，中间难免会有什么问题，或者做的不好的地方，我们会尽力在以后的活动中做的更好。     &lt;/p&gt;
&lt;p&gt;另外本次由MShare小组内的高一航负责组织，十分感谢他的辛苦组织。还感谢&lt;a href=&quot;http://gold.xitu.io/welcome&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;掘金&lt;/a&gt;、&lt;a href=&quot;https://coding.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;coding&lt;/a&gt;、&lt;a href=&quot;http://www.smartdot.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慧点科技&lt;/a&gt;、&lt;a href=&quot;https://segmentfault.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;segmentfault&lt;/a&gt;、&lt;a href=&quot;http://fir.im/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fir.im&lt;/a&gt;、&lt;a href=&quot;http://www.cocoachina.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cocoachina&lt;/a&gt;、&lt;a href=&quot;http://www.tuicool.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;推酷&lt;/a&gt;、&lt;a href=&quot;http://www.deveco.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;deveco&lt;/a&gt;、&lt;a href=&quot;http://toutiao.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发者头条&lt;/a&gt;、&lt;a href=&quot;http://www.people-squared.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;联合创业办公社[People Squared,简称P2]&lt;/a&gt;、&lt;a href=&quot;http://www.imooc.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慕课网&lt;/a&gt;的帮助。     &lt;/p&gt;
&lt;p&gt;PS：本次活动招聘志愿者，报名请联系QQ 598660766 or 332666917。   &lt;/p&gt;
&lt;p&gt;介绍图：&lt;br&gt;&lt;img src=&quot;/images/2016.06.28/01.jpg&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这几天在筹划MShare第二期的Android的分享会（下面有图片介绍这次活动），有几个朋友问我你怎么不继续做iOS了（因为我做过第一期的iOS的分享会，效果还不错，介绍地址&lt;a href=&quot;http://mengxiangyue.com/2016/04/25/%E4%B8
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一场站着听完的iOS技术分享会</title>
    <link href="http://mengxiangyue.com/2016/04/25/%E4%B8%80%E5%9C%BA%E7%AB%99%E7%9D%80%E5%90%AC%E5%AE%8C%E7%9A%84iOS%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%E4%BC%9A/"/>
    <id>http://mengxiangyue.com/2016/04/25/一场站着听完的iOS技术分享会/</id>
    <published>2016-04-25T15:45:50.000Z</published>
    <updated>2016-06-28T00:32:05.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/images/2016.04.25/01.jpg&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;可能有些人看到这个题目的时候，心里就会在想你丫吹什么牛逼啊，如果你真这么想，那就看看下面的图片吧。这次分享会从下午两点开始，五点半结束，总共三个多小时他们就已一直站着听完，我们其他的分享嘉宾直呼真爱啊。     &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016.04.25/02.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;下面来说一下这场分享会吧，这是我个人组织的一场iOS的分享会，分享的嘉宾都是我的朋友，分享的都是iOS的干货。这次分享涉及了下面的四个主题：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MShare_JS与Swift的交互&lt;/li&gt;
&lt;li&gt;MVVM实战&lt;/li&gt;
&lt;li&gt;MShare_那些你可能不知道的知识-WebSocket&lt;/li&gt;
&lt;li&gt;JSPatch实战&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对应的例子代码、Keynote、录屏的视频已经都放在了github上了，地址：&lt;a href=&quot;https://github.com/mengxiangyue/MShare_Salon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/mengxiangyue/MShare_Salon&lt;/a&gt;。    &lt;/p&gt;
&lt;p&gt;本次活动特别感谢掘金、开发者头条、推酷、Cocoachina、fir.im、deveco、segmentfault的媒体支持，感谢慧点科技的场地支持。&lt;br&gt;针对MShare第一期活动做了一个问卷调查，这份调查问卷将关系到我们下一期是否举办，以及准备什么内容，有兴趣的帮忙填写一下，谢谢。地址：&lt;a href=&quot;http://form.mikecrm.com/g2M53v。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://form.mikecrm.com/g2M53v。&lt;/a&gt;    &lt;/p&gt;
&lt;h3 id=&quot;MShare招募成员&quot;&gt;&lt;a href=&quot;#MShare招募成员&quot; class=&quot;headerlink&quot; title=&quot;MShare招募成员&quot;&gt;&lt;/a&gt;MShare招募成员&lt;/h3&gt;&lt;p&gt;MShare也在招募一些成员，要求爱分享、技术中级水平（初级如果特别爱学习也可以），有想加入的联系微信 mengxiangyue1990。MShare活动群，现在已经超过100人了，如果你想加入也可以加我微信，我拉你入群。    &lt;/p&gt;
&lt;p&gt;MShare还计划做一些有意义的事情，帮助一些开发者朋友。目前计划如下，如果你感兴趣请联系我，我们一起完成它：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发一个打包服务器（使用Nodejs技术，理论上可以，不知道会有什么坑）&lt;/li&gt;
&lt;li&gt;开发一个客户端 MShare.One ，内容应该是跟技术分享提高有关。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是现场的一些照片：&lt;br&gt;&lt;img src=&quot;/images/2016.04.25/03.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.04.25/04.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.04.25/05.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/2016.04.25/01.jpg&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;可能有些人看到这个题目的时候，心里就会在想你丫吹什么牛逼啊，如果你真这么想，那就看看下面的图片吧。这次分享会从下午两点开始，五点半结束，总共三个多小时他们就已一直站着听完，我们其他的分享嘉宾直呼真爱啊。     &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016.04.25/02.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;下面来说一下这场分享会吧，这是我个人组织的一场iOS的分享会，分享的嘉宾都是我的朋友，分享的都是iOS的干货。这次分享涉及了下面的四个主题：&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS9-by-Tutorials-学习笔记九：3D Touch</title>
    <link href="http://mengxiangyue.com/2016/02/23/iOS9-by-Tutorials-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%9D%EF%BC%9A3D-Touch/"/>
    <id>http://mengxiangyue.com/2016/02/23/iOS9-by-Tutorials-学习笔记九：3D-Touch/</id>
    <published>2016-02-23T14:40:27.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;p&gt;很久没有更新文章了，自己也感觉自己懒得要发霉了。为了让自己不至于发霉，今天开始继续更新文章。   &lt;/p&gt;
&lt;p&gt;本篇文章介绍一下3D Touch。3D Touch 是iPhone 6s推出的一项新的技术，利用该技术能够更快的预览内容，更加平滑的进行多任务等。Apple提供一下与3D Touch 相关的API：   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UITouch有一个 &lt;strong&gt;force&lt;/strong&gt; 属性用来检测用户按下的程度。&lt;/li&gt;
&lt;li&gt;UIViewController提供了一个新的API，允许你展示新的view Controller的预览，这个预览成为 &lt;strong&gt;peek&lt;/strong&gt;。此时继续用力，将会 &lt;strong&gt;pop&lt;/strong&gt; 该预览，进入对应的View Controller 界面。&lt;/li&gt;
&lt;li&gt;UIApplicationShortcutItem 是一个新的类，你能使用它给home屏幕上的icon添加快捷操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Getting-Started&quot;&gt;&lt;a href=&quot;#Getting-Started&quot; class=&quot;headerlink&quot; title=&quot;Getting Started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;&lt;p&gt;在这篇文章中将会使用一个叫做 &lt;strong&gt;Doodles(涂鸦)&lt;/strong&gt; App, 这个APP 比较简单，就两个界面：列表+详情，截图如下：&lt;br&gt;&lt;img src=&quot;/images/2016.02.23/01.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;  
&lt;p&gt;代码结构如下：&lt;br&gt;&lt;img src=&quot;/images/2016.02.23/02.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;h3 id=&quot;UITouch-force&quot;&gt;&lt;a href=&quot;#UITouch-force&quot; class=&quot;headerlink&quot; title=&quot;UITouch force&quot;&gt;&lt;/a&gt;UITouch force&lt;/h3&gt;&lt;p&gt;iOS9后，UITouch 添加了一个force属性，这个属性表示的按压屏幕的力量，取值范围为0~maximumPossibleForce(touch.maximumPossibleForce,这个值不是1)。我们可以利用force属性去改造我们的APP，让线条的粗细随着按压屏幕力量的变化而变化。&lt;br&gt;修改Canvas.swift中方法如下（下面标记update的为修改的）：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addLineFromPoint&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(from: CGPoint, toPoint: CGPoint, withForce force: CGFloat = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; &amp;#123; &lt;span class=&quot;comment&quot;&gt;// update&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;UIGraphicsBeginImageContextWithOptions&lt;/span&gt;(bounds.size, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;force:\(force)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    drawing?.drawInRect(bounds)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; cxt = &lt;span class=&quot;type&quot;&gt;UIGraphicsGetCurrentContext&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CGContextMoveToPoint&lt;/span&gt;(cxt, from.x, from.y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CGContextAddLineToPoint&lt;/span&gt;(cxt, toPoint.x, toPoint.y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CGContextSetLineCap&lt;/span&gt;(cxt, .&lt;span class=&quot;type&quot;&gt;Round&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CGContextSetLineWidth&lt;/span&gt;(cxt, strokeWidth * force) &lt;span class=&quot;comment&quot;&gt;// update&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    strokeColor.setStroke()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CGContextStrokePath&lt;/span&gt;(cxt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    drawing = &lt;span class=&quot;type&quot;&gt;UIGraphicsGetImageFromCurrentImageContext&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layer.contents = drawing?.&lt;span class=&quot;type&quot;&gt;CGImage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;UIGraphicsEndImageContext&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/p&gt;
&lt;p&gt;继续修改如下方法：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesMoved&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; touch = touches.first &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 先去验证是否支持3D Touch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; traitCollection.forceTouchCapability == .&lt;span class=&quot;type&quot;&gt;Available&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            addLineFromPoint(touch.previousLocationInView(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;), toPoint: touch.locationInView(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;), withForce: touch.force)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            addLineFromPoint(touch.previousLocationInView(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;), toPoint: touch.locationInView(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/p&gt;
&lt;p&gt;修改完后运行一下，用不同压力绘画，效果如下：&lt;br&gt;&lt;img src=&quot;/images/2016.02.23/03.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;h3 id=&quot;Peeking-and-popping&quot;&gt;&lt;a href=&quot;#Peeking-and-popping&quot; class=&quot;headerlink&quot; title=&quot;Peeking and popping&quot;&gt;&lt;/a&gt;Peeking and popping&lt;/h3&gt;&lt;p&gt;对于 &lt;strong&gt;Peek&lt;/strong&gt; 和 &lt;strong&gt;Pop&lt;/strong&gt; 等写完下面的例子自然就明白了。  &lt;/p&gt;
&lt;p&gt;修改DoodlesViewController.swift对应方法如下：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewDidLoad()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// update&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; traitCollection.forceTouchCapability == .&lt;span class=&quot;type&quot;&gt;Available&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 添加对于3D Touch的代理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      registerForPreviewingWithDelegate(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, sourceView: view)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;…………&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 扩展该类实现对应的协议 有两个方法用于处理peek pop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MARK: - 3D Touch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DoodlesViewController&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;UIViewControllerPreviewingDelegate&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// peek 回调 返回一个包含对应内容的UIViewController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;previewingContext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(previewingContext: UIViewControllerPreviewing, viewControllerForLocation location: CGPoint)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;UIViewController&lt;/span&gt;? &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; indexPath = tableView.indexPathForRowAtPoint(location), cell = tableView.cellForRowAtIndexPath(indexPath) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;DoodleCell&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 获取点击的cell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; identifier = &lt;span class=&quot;string&quot;&gt;&quot;DoodleDetailViewController&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; detailVC = storyboard?.instantiateViewControllerWithIdentifier(identifier) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;DoodleDetailViewController&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 创建对应的View Controller&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        detailVC.doodle = cell.doodle &lt;span class=&quot;comment&quot;&gt;// 设置数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 显示那部分区域响应的3D Touch 在peek之前，该frame之外的内容将会被模糊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        previewingContext.sourceRect = cell.frame &lt;span class=&quot;comment&quot;&gt;//CGRect(x: 0, y: 100, width: 300, height: 40)// cell.frame&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; detailVC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// pop commitViewController是上面方法返回的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;previewingContext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(previewingContext: UIViewControllerPreviewing, commitViewController viewControllerToCommit: UIViewController)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// peek之后继续用力 将会调用该方法 进入对应的view Controller&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        showViewController(viewControllerToCommit, sender: &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;运行效果如下：&lt;br&gt;&lt;img src=&quot;/images/2016.02.23/04.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;h4 id=&quot;Preview-actions&quot;&gt;&lt;a href=&quot;#Preview-actions&quot; class=&quot;headerlink&quot; title=&quot;Preview actions&quot;&gt;&lt;/a&gt;Preview actions&lt;/h4&gt;&lt;p&gt;在 &lt;strong&gt;Peek&lt;/strong&gt; 状态下，我们可以添加一些快捷操作，通过上划就能显示出来这些快捷操作。这些快捷操作是需要添加到 &lt;strong&gt;Peek&lt;/strong&gt; 显示的View Controller中的。&lt;br&gt;在DoodleDetailViewController.swift 末尾添加如下代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; doodlesViewController:  &lt;span class=&quot;type&quot;&gt;DoodlesViewController&lt;/span&gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;previewActionItems&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; -&amp;gt; [&lt;span class=&quot;type&quot;&gt;UIPreviewActionItem&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// UIPreviewAction 专门为3D Touch使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; shareAction = &lt;span class=&quot;type&quot;&gt;UIPreviewAction&lt;/span&gt;(title: &lt;span class=&quot;string&quot;&gt;&quot;分享&quot;&lt;/span&gt;, style: .&lt;span class=&quot;type&quot;&gt;Default&lt;/span&gt;) &amp;#123; (previewAction, viewController) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; doodlesVC = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.doodlesViewController, activityViewController = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.activityViewController &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            doodlesVC.presentViewController(activityViewController, animated: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, completion: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; deleteAction = &lt;span class=&quot;type&quot;&gt;UIPreviewAction&lt;/span&gt;(title: &lt;span class=&quot;string&quot;&gt;&quot;删除&quot;&lt;/span&gt;, style: .&lt;span class=&quot;type&quot;&gt;Default&lt;/span&gt;) &amp;#123; (previewAction, viewController) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; doodle = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.doodle &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Doodle&lt;/span&gt;.deleteDoodle(doodle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; doodlesViewController = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.doodlesViewController &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            doodlesViewController.tableView.reloadData()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [shareAction, deleteAction]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;上面的代码添加了两个快捷键，一个是分享一个是删除。&lt;/p&gt;
&lt;p&gt;在DoodlesViewController.swift中也需要修改一下代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 注释new add 是新添加的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;previewingContext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(previewingContext: UIViewControllerPreviewing, viewControllerForLocation location: CGPoint)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;UIViewController&lt;/span&gt;? &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; indexPath = tableView.indexPathForRowAtPoint(location), cell = tableView.cellForRowAtIndexPath(indexPath) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;DoodleCell&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 获取点击的cell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; identifier = &lt;span class=&quot;string&quot;&gt;&quot;DoodleDetailViewController&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; detailVC = storyboard?.instantiateViewControllerWithIdentifier(identifier) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;DoodleDetailViewController&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 创建对应的View Controller&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    detailVC.doodle = cell.doodle &lt;span class=&quot;comment&quot;&gt;// 设置数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    detailVC.doodlesViewController = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// new add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 显示那部分区域响应的3D Touch 在peek之前，该frame之外的内容将会被模糊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    previewingContext.sourceRect = cell.frame &lt;span class=&quot;comment&quot;&gt;//CGRect(x: 0, y: 100, width: 300, height: 40)// cell.frame&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; detailVC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;    &lt;/p&gt;
&lt;p&gt;运行程序，在 &lt;strong&gt;Peek&lt;/strong&gt; 状态上划效果如下：&lt;br&gt;&lt;img src=&quot;/images/2016.02.23/05.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;h3 id=&quot;Home-screen-quick-actions&quot;&gt;&lt;a href=&quot;#Home-screen-quick-actions&quot; class=&quot;headerlink&quot; title=&quot;Home screen quick actions&quot;&gt;&lt;/a&gt;Home screen quick actions&lt;/h3&gt;&lt;p&gt;3D Touch 另一个作用就是能够在Home界面的图标上，通过按压在图标的周围显示一个快捷操作（shortcuts）的菜单，通过这个菜单，我们能够更加快速直接的进入某项功能。现在主流的App都已经支持这项功能，可以在图标上按按试试。   &lt;/p&gt;
&lt;p&gt;这种快捷操作（shortcuts）分两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Static shortcuts&lt;/strong&gt; 静态的，在Info.plist里面配置，在程序安装后就会存在。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dynamic shortcuts&lt;/strong&gt; 动态的，在运行时创建的，直到程序第一次运行后才会存在。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Adding-a-static-shortcut&quot;&gt;&lt;a href=&quot;#Adding-a-static-shortcut&quot; class=&quot;headerlink&quot; title=&quot;Adding a static shortcut&quot;&gt;&lt;/a&gt;Adding a static shortcut&lt;/h4&gt;&lt;p&gt;添加一个静态的shortcut，首先需要在Info.plist里面配置，按照下图进行相应的配置：&lt;br&gt;&lt;img src=&quot;/images/2016.02.23/06.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;配置好了之后运行程序，在Home页面App Icon上按压能够看到我们配置的shortcut，点击后发现应用启动，但是不是我们想要的结果。我们需要在Appdelegate.swift中添加如下的代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 响应shortcut的点击&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(application: UIApplication, performActionForShortcutItem shortcutItem: UIApplicationShortcutItem, completionHandler: &lt;span class=&quot;params&quot;&gt;(Bool)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handleShortcutItem(shortcutItem)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 如果你自己处理了shortcut 这里参数为true 否则为false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    completionHandler(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleShortcutItem&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(shortcutItem: UIApplicationShortcutItem)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(shortcutItem.userInfo)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; shortcutItem.type &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;com.razeware.Doodles.new&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        presentNewDoodleViewController()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;presentNewDoodleViewController&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; identifier = &lt;span class=&quot;string&quot;&gt;&quot;NewDoodleNavigationController&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; doodleViewController = &lt;span class=&quot;type&quot;&gt;UIStoryboard&lt;/span&gt;.mainStoryboard .instantiateViewControllerWithIdentifier(identifier)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    window?.rootViewController? .presentViewController(doodleViewController, animated: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, completion: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/p&gt;
&lt;p&gt;运行程序，点击shortcut会进入新建View Controller。   &lt;/p&gt;
&lt;h4 id=&quot;Adding-a-dynamic-shortcut&quot;&gt;&lt;a href=&quot;#Adding-a-dynamic-shortcut&quot; class=&quot;headerlink&quot; title=&quot;Adding a dynamic shortcut&quot;&gt;&lt;/a&gt;Adding a dynamic shortcut&lt;/h4&gt;&lt;p&gt;当然我们也能动态的通过程序添加shortcut，这个有一个限制就是程序必须运行一次才会生效。&lt;br&gt;修改Doodle.swift对应的方法如下（注释add地方为新加的）：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addDoodle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(doodle: Doodle)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  allDoodles.append(doodle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Doodle&lt;/span&gt;.configureDynamicShortcuts() &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deleteDoodle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(doodle: Doodle)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; index = allDoodles.indexOf(&amp;#123; $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.name == doodle.name &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    allDoodles.removeAtIndex(index)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;Doodle&lt;/span&gt;.configureDynamicShortcuts() &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这个方法添加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;configureDynamicShortcuts&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; mostRecentDoodle = &lt;span class=&quot;type&quot;&gt;Doodle&lt;/span&gt;.sortedDoodles.first &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; shortcutType = &lt;span class=&quot;string&quot;&gt;&quot;com.razeware.Doodles.share&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; shortcutItem = &lt;span class=&quot;type&quot;&gt;UIApplicationShortcutItem&lt;/span&gt;(type: shortcutType, localizedTitle: &lt;span class=&quot;string&quot;&gt;&quot;Share latest Doodle&quot;&lt;/span&gt;, localizedSubtitle: mostRecentDoodle.name, icon: &lt;span class=&quot;type&quot;&gt;UIApplicationShortcutIcon&lt;/span&gt;(type: .&lt;span class=&quot;type&quot;&gt;Share&lt;/span&gt;), userInfo: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;UIApplication&lt;/span&gt;.sharedApplication().shortcutItems = [shortcutItem]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;UIApplication&lt;/span&gt;.sharedApplication().shortcutItems = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;修改AppDelegate.swift对应的方法：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  configureAppAppearance()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Doodle&lt;/span&gt;.configureDynamicShortcuts() &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;…………&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleShortcutItem&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(shortcutItem: UIApplicationShortcutItem)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(shortcutItem.userInfo)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; shortcutItem.type &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;com.razeware.Doodles.new&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        presentNewDoodleViewController()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;com.razeware.Doodles.share&quot;&lt;/span&gt;: &lt;span class=&quot;comment&quot;&gt;// 处理share&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shareMostRecentDoodle()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;shareMostRecentDoodle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; mostRecentDoodle = &lt;span class=&quot;type&quot;&gt;Doodle&lt;/span&gt;.sortedDoodles.first, navigationController = window?.rootViewController &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;UINavigationController&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; identifier = &lt;span class=&quot;string&quot;&gt;&quot;DoodleDetailViewController&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; doodleViewController = &lt;span class=&quot;type&quot;&gt;UIStoryboard&lt;/span&gt;.mainStoryboard.instantiateViewControllerWithIdentifier(identifier) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;! &lt;span class=&quot;type&quot;&gt;DoodleDetailViewController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    doodleViewController.doodle = mostRecentDoodle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    doodleViewController.shareDoodle = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    navigationController.pushViewController(doodleViewController, animated: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;运行程序，然后退出到Home界面，按压图标，点击share，能够进入程序对应的详情页面，调用起来分享。&lt;br&gt;&lt;img src=&quot;/images/2016.02.23/07.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;3D Touch相关的内容到这里就已经更新完了，初步计划以后录制视频关于动画相关的，希望有兴趣的朋友关注一下。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;很久没有更新文章了，自己也感觉自己懒得要发霉了。为了让自己不至于发霉，今天开始继续更新文章。   &lt;/p&gt;
&lt;p&gt;本篇文章介绍一下3D Touch。3D Touch 是iPhone 6s推出的一项新的技术，利用该技术能够更快的预览内容，更加平滑的进行多任务等。Apple提供一下与3D Touch 相关的API：   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UITouch有一个 &lt;strong&gt;force&lt;/strong&gt; 属性用来检测用户按下的程度。&lt;/li&gt;
&lt;li&gt;UIViewController提供了一个新的API，允许你展示新的view Controller的预览，这个预览成为 &lt;strong&gt;peek&lt;/strong&gt;。此时继续用力，将会 &lt;strong&gt;pop&lt;/strong&gt; 该预览，进入对应的View Controller 界面。&lt;/li&gt;
&lt;li&gt;UIApplicationShortcutItem 是一个新的类，你能使用它给home屏幕上的icon添加快捷操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Getting-Started&quot;&gt;&lt;a href=&quot;#Getting-Started&quot; class=&quot;headerlink&quot; title=&quot;Getting Started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;&lt;p&gt;在这篇文章中将会使用一个叫做 &lt;strong&gt;Doodles(涂鸦)&lt;/strong&gt; App, 这个APP 比较简单，就两个界面：列表+详情，截图如下：&lt;br&gt;&lt;img src=&quot;/images/2016.02.23/01.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
    
    </summary>
    
      <category term="iOS 9 by Tutoials" scheme="http://mengxiangyue.com/categories/iOS-9-by-Tutoials/"/>
    
    
      <category term="iOS 9" scheme="http://mengxiangyue.com/tags/iOS-9/"/>
    
  </entry>
  
  <entry>
    <title>iOS9 by Tutorials 学习笔记八:Storyboard新特性</title>
    <link href="http://mengxiangyue.com/2016/01/25/iOS9-by-Tutorials-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%85%AB-Storyboard%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://mengxiangyue.com/2016/01/25/iOS9-by-Tutorials-学习笔记八-Storyboard新特性/</id>
    <published>2016-01-25T15:06:34.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;p&gt;终于整理到第八篇了，中途好几次都想放弃了，最终还是坚持下来了，我自己的计划应该除了这篇还有最多三篇就结束了吧。   &lt;/p&gt;
&lt;p&gt;回到正题，苹果最近几点一直在努力推行Storyboard，每年的WWDC都会针对Storyboard有一定的增强，今年也不例外，Storyboard添加了一些新的特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以使用storyboard references将一个Scene链接到另一个storyboard中&lt;/li&gt;
&lt;li&gt;使用scene dock给view controller添加附加的view&lt;/li&gt;
&lt;li&gt;在navigation bar上添加多个button&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Getting-started&quot;&gt;&lt;a href=&quot;#Getting-started&quot; class=&quot;headerlink&quot; title=&quot;Getting started&quot;&gt;&lt;/a&gt;Getting started&lt;/h3&gt;&lt;p&gt;打开本节配套的工程，在模拟器上运行一下，看看都有什么功能。下面看一下代码 &lt;strong&gt;ChecklistsViewController.swift&lt;/strong&gt; 显示checklist，&lt;strong&gt;ChecklistDetailViewController.swift&lt;/strong&gt; 显示list中的每一个item，&lt;strong&gt;Main.storyboard&lt;/strong&gt; 包含用户界面。这个App并没有完成，在本节中将会添加一些功能，完善该APP。  &lt;/p&gt;
&lt;h3 id=&quot;Storyboard-references&quot;&gt;&lt;a href=&quot;#Storyboard-references&quot; class=&quot;headerlink&quot; title=&quot;Storyboard references&quot;&gt;&lt;/a&gt;Storyboard references&lt;/h3&gt;&lt;p&gt;如果你在一个大的项目中使用了storyboard，你将会慢慢感觉storyboard越来越大，会越来越笨重，并且还经常会发生冲突。这些导致了storyboard慢慢丢失了它的优势。   &lt;/p&gt;
&lt;p&gt;你可能已经通过将Scene分别放到多个storyboard中的方式解决了一部分的问题，但是同时也遇到了一些问题：在两个Scene之间的segue不能直接添加了，显示一个View Controller有时候必须通过代码创建显示。  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;现在我们在Xcode7中能够通过storyboard reference解决这个问题了。它能够很容易的将storyboard分割成为更小的storyboard，并且能够直接在storyboard中使用segue。更多的小的storyboard也能让团队的成员更加独立的工作，而不会影响到其他的团队成员。  &lt;/p&gt;
&lt;h4 id=&quot;Creating-your-first-storyboard-reference&quot;&gt;&lt;a href=&quot;#Creating-your-first-storyboard-reference&quot; class=&quot;headerlink&quot; title=&quot;Creating your first storyboard reference&quot;&gt;&lt;/a&gt;Creating your first storyboard reference&lt;/h4&gt;&lt;p&gt;目前的情况，Prepped是一个很小的app，但是同样也可以在结构上进行storyboard的划分。Container view controller就是一个很好的从功能上划分的例子。   &lt;/p&gt;
&lt;p&gt;Prepped使用的tab bar controller，在这种情况下，将每个tab的子view controller划分进一个storyboard是一个不错的选择（当然每个tab bar子VC下还可以划分）。    &lt;/p&gt;
&lt;p&gt;打开Main.storyboard,双击空白区域，缩小storyboard区域，能够看到所有的scene。选中除tab bar controller的所有的scene。&lt;br&gt;&lt;img src=&quot;/images/2016.01.25/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;选择 &lt;strong&gt;Editor\Refactor to Storyboard&lt;/strong&gt;，输入 &lt;strong&gt;Checklists.storyboard&lt;/strong&gt; 作为新的storyboard的名字。点击Save。这样我们就将一部分的Scene拆分到了新的storyboard中。Main.storyboard也变成了下面的样子：&lt;br&gt;&lt;img src=&quot;/images/2016.01.25/02.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;选中图中的Reference，查看右边的属性检查器，能够看到Storyboard和Referenced ID，storyboard根据这两个属性去确定该reference真正指向的Scene。双加该reference也能够跳转到真正的Scene。如果我们删除了上图中的Referenced ID，默认情况下指向的是reference Storyboard中Initial View Controller。&lt;br&gt;&lt;img src=&quot;/images/2016.01.25/03.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;h4 id=&quot;Storyboards-within-a-team&quot;&gt;&lt;a href=&quot;#Storyboards-within-a-team&quot; class=&quot;headerlink&quot; title=&quot;Storyboards within a team&quot;&gt;&lt;/a&gt;Storyboards within a team&lt;/h4&gt;&lt;p&gt;由于在团队中都惧怕Storyboard的冲突，所以还是很少使用。但是现在storyboard reference能够避免这些冲突。我们可能都遇到过这种情况，我们在一个storyboard钟创建了一个view controller，在另一个storyboard想要跳转到它，一般这种情况我们都是使用代码跳转了，现在我们可以使用storyboard实现了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;添加工程目录内的Diary目录到工程中来  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;打开Main.storyboard，拽一个storyboard reference添加到storyboard的空白区域：&lt;br&gt;&lt;img src=&quot;/images/2016.01.25/04.png&quot; alt=&quot;&quot;&gt;    &lt;/p&gt;
&lt;p&gt;运行程序，显示如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.25/05.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;h3 id=&quot;Views-in-the-scene-dock&quot;&gt;&lt;a href=&quot;#Views-in-the-scene-dock&quot; class=&quot;headerlink&quot; title=&quot;Views in the scene dock&quot;&gt;&lt;/a&gt;Views in the scene dock&lt;/h3&gt;&lt;p&gt;Scene Dock是在Storyboard Scene顶部的一个区域（下图中有标注），我们可以将View添加到scene dock上，添加到scene dock上的view不会被初始化添加到view controller的view的subviews中，但是你能够使用IBOutlet引用使用它。按照如图添加然后设置该View的background color为#FFFAE8.&lt;br&gt;&lt;img src=&quot;/images/2016.01.25/06.png&quot; alt=&quot;&quot;&gt;    &lt;/p&gt;
&lt;p&gt;按照下图，按住ctrl连接，在弹出菜单中选择selectedBackgroundView：&lt;br&gt;&lt;img src=&quot;/images/2016.01.25/07.png&quot; alt=&quot;&quot;&gt;     &lt;/p&gt;
&lt;p&gt;运行程序，发现我们选中的item上面添加了背景。  &lt;/p&gt;
&lt;p&gt;上面的例子中我们只是通过storyboard使用了scene dock中的view，我们也可以使用IBOutlet引用到我们的代码中，然后由代码控制在什么情况下的隐藏与显示。&lt;/p&gt;
&lt;h3 id=&quot;Using-multiple-bar-buttons&quot;&gt;&lt;a href=&quot;#Using-multiple-bar-buttons&quot; class=&quot;headerlink&quot; title=&quot;Using multiple bar buttons&quot;&gt;&lt;/a&gt;Using multiple bar buttons&lt;/h3&gt;&lt;p&gt;在Xcode 7中我们可以在storyboard中，为view controller的Navigation bar在同一侧添加多个按钮了。  &lt;/p&gt;
&lt;p&gt;打开ChecklistDetail.storyboard，选中 Checklist Detail View Controller，从Object Library中拽多个bar button item添加到右侧的Navigation bar上，这样就添加了多个bar button，添加完后其他的使用方式就跟原来的基本一样了，这里就不重复了。&lt;br&gt;&lt;img src=&quot;/images/2016.01.25/08.png&quot; alt=&quot;&quot;&gt;    &lt;/p&gt;
&lt;p&gt;最近一直在比较累，所以这篇整理的比较简单，只是挑选了一些重点的写出来了，如果哪里感觉不是太详细，还请去看英文的原版。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;终于整理到第八篇了，中途好几次都想放弃了，最终还是坚持下来了，我自己的计划应该除了这篇还有最多三篇就结束了吧。   &lt;/p&gt;
&lt;p&gt;回到正题，苹果最近几点一直在努力推行Storyboard，每年的WWDC都会针对Storyboard有一定的增强，今年也不例外，Storyboard添加了一些新的特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以使用storyboard references将一个Scene链接到另一个storyboard中&lt;/li&gt;
&lt;li&gt;使用scene dock给view controller添加附加的view&lt;/li&gt;
&lt;li&gt;在navigation bar上添加多个button&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Getting-started&quot;&gt;&lt;a href=&quot;#Getting-started&quot; class=&quot;headerlink&quot; title=&quot;Getting started&quot;&gt;&lt;/a&gt;Getting started&lt;/h3&gt;&lt;p&gt;打开本节配套的工程，在模拟器上运行一下，看看都有什么功能。下面看一下代码 &lt;strong&gt;ChecklistsViewController.swift&lt;/strong&gt; 显示checklist，&lt;strong&gt;ChecklistDetailViewController.swift&lt;/strong&gt; 显示list中的每一个item，&lt;strong&gt;Main.storyboard&lt;/strong&gt; 包含用户界面。这个App并没有完成，在本节中将会添加一些功能，完善该APP。  &lt;/p&gt;
&lt;h3 id=&quot;Storyboard-references&quot;&gt;&lt;a href=&quot;#Storyboard-references&quot; class=&quot;headerlink&quot; title=&quot;Storyboard references&quot;&gt;&lt;/a&gt;Storyboard references&lt;/h3&gt;&lt;p&gt;如果你在一个大的项目中使用了storyboard，你将会慢慢感觉storyboard越来越大，会越来越笨重，并且还经常会发生冲突。这些导致了storyboard慢慢丢失了它的优势。   &lt;/p&gt;
&lt;p&gt;你可能已经通过将Scene分别放到多个storyboard中的方式解决了一部分的问题，但是同时也遇到了一些问题：在两个Scene之间的segue不能直接添加了，显示一个View Controller有时候必须通过代码创建显示。  &lt;/p&gt;
    
    </summary>
    
      <category term="iOS 9 by Tutoials" scheme="http://mengxiangyue.com/categories/iOS-9-by-Tutoials/"/>
    
    
      <category term="iOS 9" scheme="http://mengxiangyue.com/tags/iOS-9/"/>
    
  </entry>
  
  <entry>
    <title>iOS9-by-Tutorials-学习笔记七：UIStackView 进阶</title>
    <link href="http://mengxiangyue.com/2016/01/21/iOS9-by-Tutorials-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%83%EF%BC%9AUIStackView-%E8%BF%9B%E9%98%B6/"/>
    <id>http://mengxiangyue.com/2016/01/21/iOS9-by-Tutorials-学习笔记七：UIStackView-进阶/</id>
    <published>2016-01-21T15:40:43.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;p&gt;继续接着上篇文章介绍UIStackView，这一篇将涉及到一些稍微深一点的知识点。&lt;/p&gt;
&lt;h3 id=&quot;Getting-started&quot;&gt;&lt;a href=&quot;#Getting-started&quot; class=&quot;headerlink&quot; title=&quot;Getting started&quot;&gt;&lt;/a&gt;Getting started&lt;/h3&gt;&lt;p&gt;首先回顾一下我们计划完善SpotInfoViewController需要完成的任务情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;底部按钮间距不相同。 完成。&lt;/li&gt;
&lt;li&gt;点击Hide按钮，底部的内容应该填充空白位置。 未完成。&lt;/li&gt;
&lt;li&gt;交换what to see和weather两部分的内容。 未完成。&lt;/li&gt;
&lt;li&gt;weather详情隐藏的时候，rating部分纵向显示。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Converting-the-sections&quot;&gt;&lt;a href=&quot;#Converting-the-sections&quot; class=&quot;headerlink&quot; title=&quot;Converting the sections&quot;&gt;&lt;/a&gt;Converting the sections&lt;/h3&gt;&lt;p&gt;在完成上面的任务之前，你需要将SpotInfoViewController中的所有的sections转换为使用stack view。在下面的内容中能够学到一下配置stack view的属性，例如alignment、distribution和spacing。&lt;/p&gt;
&lt;h4 id=&quot;Rating-section&quot;&gt;&lt;a href=&quot;#Rating-section&quot; class=&quot;headerlink&quot; title=&quot;Rating section&quot;&gt;&lt;/a&gt;Rating section&lt;/h4&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;   
&lt;p&gt;Rating 部分是很容易修改的，只要把它们嵌入到一个stack view就可以了。  &lt;/p&gt;
&lt;p&gt;打开Main.storyboard,在Spot Info View Controller场景中选中RATING Lable和stars Label：&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;选中后点击图片右下角指出来的Stack按钮。按照如图设置stack view的约束：&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/02.png&quot; alt=&quot;&quot;&gt;    &lt;/p&gt;
&lt;p&gt;设置stack view的spacing属性为8，storyboard中显示如下，看起来是错误的，我们只需要修改属性distribution为其他值，然后再修改为Fill，就好了。&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/03.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;h4 id=&quot;Unembedding-a-stack-view&quot;&gt;&lt;a href=&quot;#Unembedding-a-stack-view&quot; class=&quot;headerlink&quot; title=&quot;Unembedding a stack view&quot;&gt;&lt;/a&gt;Unembedding a stack view&lt;/h4&gt;&lt;p&gt;有时候我们想要取消一个Stack View，可以选中Stack View，按住Option键点击Stack按钮，在弹出的菜单中选择&lt;strong&gt;Umembed&lt;/strong&gt;:&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/04.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;h3 id=&quot;Your-first-vertical-stack-view&quot;&gt;&lt;a href=&quot;#Your-first-vertical-stack-view&quot; class=&quot;headerlink&quot; title=&quot;Your first vertical stack view&quot;&gt;&lt;/a&gt;Your first vertical stack view&lt;/h3&gt;&lt;p&gt;现在你讲创建第一个纵向的stack view。选中WHY VISIT label和&lt;whyvisitlabel&gt; label,点击Stack按钮，Xcode会根据控件的位置创建stack view的正确方向。这两个label嵌入到stack view中后，与外部view的约束被自动去掉了，我们需要设置一下stack view的约束，点击Pin 按钮，弹出菜单设置四个方向的约束，这里的约束默认情况下都是与最近的元素之间的，我们可以通过点击下拉框选择约束的对应关系。&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/05.png&quot; alt=&quot;&quot;&gt;   &lt;/whyvisitlabel&gt;&lt;/p&gt;
&lt;p&gt;到目前为止，你已经得到了一个扩展到view右侧边缘的stack view，但是现在下面的label还是原来的宽度。你将要学习stack view的alignment属性，能够修复这个问题。   &lt;/p&gt;
&lt;h4 id=&quot;Alignment-property&quot;&gt;&lt;a href=&quot;#Alignment-property&quot; class=&quot;headerlink&quot; title=&quot;Alignment property&quot;&gt;&lt;/a&gt;Alignment property&lt;/h4&gt;&lt;p&gt;Alignment属性可以设置stack view元素的对齐方式，对于Axis未Vertical的stack view该属性值可选：Fill、Leading、Center、Trailling，对于Axis为Horizontal的stack view，该属性值可选：Fill、Top、Center、Bottom、FirstBaseline、LastBaseline。&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/06.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/07.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/08.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/09.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;选中我们刚才创建的stack view设置Alignment、Distribution都为Fill。我们发现两个label都已经填充到stack view的宽度了。运行一下程序，发现运行良好。&lt;/p&gt;
&lt;h3 id=&quot;Convert-the-“what-to-see”-section&quot;&gt;&lt;a href=&quot;#Convert-the-“what-to-see”-section&quot; class=&quot;headerlink&quot; title=&quot;Convert the “what to see” section&quot;&gt;&lt;/a&gt;Convert the “what to see” section&lt;/h3&gt;&lt;p&gt;下面转换what to see部分。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中WHAT TO SEE label和 the &lt;whattoseelabel&gt; label。&lt;/whattoseelabel&gt;&lt;/li&gt;
&lt;li&gt;点击Stack按钮&lt;/li&gt;
&lt;li&gt;点击Pin按钮，选中Constrain to margins，设置四个约束：top：20， leading：0， Trailing：0， bottom： 20&lt;/li&gt;
&lt;li&gt;设置stack view的Alignment属性为Fill&lt;br&gt;运行一下程序，发现程序跟原来一样。现在只剩下weather部分了。   &lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Convert-the-weather-section&quot;&gt;&lt;a href=&quot;#Convert-the-weather-section&quot; class=&quot;headerlink&quot; title=&quot;Convert the weather section&quot;&gt;&lt;/a&gt;Convert the weather section&lt;/h3&gt;&lt;p&gt;我们可以将weather部分嵌入到一个stack view，但是别忘了Hide按钮，它将会使我们的stack view变得更加复杂。&lt;/p&gt;
&lt;h4 id=&quot;One-possible-approach&quot;&gt;&lt;a href=&quot;#One-possible-approach&quot; class=&quot;headerlink&quot; title=&quot;One possible approach&quot;&gt;&lt;/a&gt;One possible approach&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这种方案只是探讨，并不会在Xcode中实现。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你能够将WEATHER label和Hide按钮嵌入到一个横向的stack view中，然后在将新的stack view和&lt;weatherinfolabel&gt;一起嵌入到一个纵向的stackview中。   &lt;/weatherinfolabel&gt;&lt;/p&gt;
&lt;h4 id=&quot;Actual-approach&quot;&gt;&lt;a href=&quot;#Actual-approach&quot; class=&quot;headerlink&quot; title=&quot;Actual approach&quot;&gt;&lt;/a&gt;Actual approach&lt;/h4&gt;&lt;p&gt;我们实际使用的方案是将Hide按钮不嵌入到weather部分的stack view中，设置其与WEATHER label的约束。这里将要添加stack view外部元素与stack view内部元素之间的约束。  &lt;/p&gt;
&lt;h5 id=&quot;Change-the-weather-section-–-for-real&quot;&gt;&lt;a href=&quot;#Change-the-weather-section-–-for-real&quot; class=&quot;headerlink&quot; title=&quot;Change the weather section – for real&quot;&gt;&lt;/a&gt;Change the weather section – for real&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;选中WEATHER label和&lt;weatherinfolabel&gt;&lt;/weatherinfolabel&gt;&lt;/li&gt;
&lt;li&gt;点击Stack按钮。点击Pin按钮，选中Constrain to margins，&lt;/li&gt;
&lt;li&gt;设置四个约束：top：20， leading：0， Trailing：0， bottom： 20。&lt;/li&gt;
&lt;li&gt;设置stack view的Alignment属性为Fill。设置完如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/10.png&quot; alt=&quot;&quot;&gt;   &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面我们需要设置Hide按钮与WEATHER的约束。我们需要设置Hide按钮的左边缘与WEATHER右边缘建立约束。但是现在WEATHER充满了整个stack view。我们可以将WEATHER嵌入到一个纵向的stack view中，然后设置alignment属性为Leading。运行我们的程序，发现Hide按钮位置错误了，那是因为我们将WEATHER label嵌入到stack view之后，在Hide按钮上的所有约束都被移除了。我们需要重新为Hide添加约束：从Hide按钮按住Control连线到WEATHER label，在弹出菜单中按住Shift，选中Horizontal Space和Baseline，然后点击Add Constraints：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我自己做测试的时候，发现不把WEATHER嵌入到纵向的stack view中，直接添加约束也是可以的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016.01.21/11.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;运行程序，Hide按钮的位置现在是正常的了。现在点击Hide按钮，内容被隐藏后，并且空白区域也被下面的内容填充了。现在所有的内容都在一个单独的stack view中，下面将会将其添加到一个统一的stack view中。&lt;/p&gt;
&lt;h3 id=&quot;Top-level-stack-view&quot;&gt;&lt;a href=&quot;#Top-level-stack-view&quot; class=&quot;headerlink&quot; title=&quot;Top-level stack view&quot;&gt;&lt;/a&gt;Top-level stack view&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;选中所有的外层的stack view，嵌入到一个stack view中&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/12.png&quot; alt=&quot;&quot;&gt;   &lt;/li&gt;
&lt;li&gt;点击Pin按钮，选中Constraints to margins，添加四个方向的约束为0&lt;/li&gt;
&lt;li&gt;设置spacing为20，Alignment为Fill&lt;br&gt;storyboard显示如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/13.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;运行程序发现Hide按钮又出问题了。需要重复上面的步骤：从Hide按钮按住Control连线到WEATHER label，在弹出菜单中按住Shift，选中Horizontal Space和Baseline，然后点击Add Constraints。  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;运行程序，运行结果变得正常了。&lt;/p&gt;
&lt;h3 id=&quot;Repositioning-views&quot;&gt;&lt;a href=&quot;#Repositioning-views&quot; class=&quot;headerlink&quot; title=&quot;Repositioning views&quot;&gt;&lt;/a&gt;Repositioning views&lt;/h3&gt;&lt;p&gt;将what to see移动到weather上面。选中what to see嵌入的stack view，拖动到weather嵌入的stack view的上面。&lt;br&gt;&lt;img src=&quot;/images/2016.01.21/14.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Hide按钮的位置又错了，选中Hide按钮，点击Update Frames就能够解决了。运行程序，what to see已经移动到weather上面。&lt;/p&gt;
&lt;h3 id=&quot;Arranged-subviews&quot;&gt;&lt;a href=&quot;#Arranged-subviews&quot; class=&quot;headerlink&quot; title=&quot;Arranged subviews&quot;&gt;&lt;/a&gt;Arranged subviews&lt;/h3&gt;&lt;p&gt;UIStackView有一个属性叫做arrangedSubviews，该属性保存着UIStackView中包含的View，其中View的顺序就是View在UIStackView排列的顺序。UIStackView也是UIView的子类，也可以使用addSubview添加子View（例如设置background View），但是在storyboard添加的view都不是subview，都是arrangedSubviews中一个View。  &lt;/p&gt;
&lt;p&gt;我们可以使用addArrangedSubview(_:) or insertArrangedSubview(_:atIndex:)添加插入View。使用removeArrangedSubview(_:)从stack view中删除一个View，但是使用该方法删除的View并不会在视图树中真正的删除，需要调用view的removeFromSuperview()才会真正的删除。如果我们直接调用view的removeFromSuperview()，该view在stack view删除的同时还会在视图树中删除。&lt;/p&gt;
&lt;h3 id=&quot;Animation&quot;&gt;&lt;a href=&quot;#Animation&quot; class=&quot;headerlink&quot; title=&quot;Animation&quot;&gt;&lt;/a&gt;Animation&lt;/h3&gt;&lt;p&gt;现在点击Hide或者Show按钮的时候，weather详情部分的变化有些生硬，我们可以添加一些动画，让其变得更加好一点。&lt;/p&gt;
&lt;h4 id=&quot;Animating-hidden&quot;&gt;&lt;a href=&quot;#Animating-hidden&quot; class=&quot;headerlink&quot; title=&quot;Animating hidden&quot;&gt;&lt;/a&gt;Animating hidden&lt;/h4&gt;&lt;p&gt;UIStackView同样适用于UIView的动画引擎。打开SpotInfoViewController.swift,修改对应方法如下：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;updateWeatherInfoViews&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(hideWeatherInfo shouldHideWeatherInfo: Bool, animated: Bool)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; newButtonTitle = shouldHideWeatherInfo ? &lt;span class=&quot;string&quot;&gt;&quot;Show&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;Hide&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   weatherHideOrShowButton.setTitle(newButtonTitle, forState: .&lt;span class=&quot;type&quot;&gt;Normal&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; Animate when animated == true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; animated &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;type&quot;&gt;UIView&lt;/span&gt;.animateWithDuration(&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           delay: &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           usingSpringWithDamping: &lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           initialSpringVelocity: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           options: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           animations: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.weatherInfoLabel.hidden = shouldHideWeatherInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;, completion: &amp;#123; finished &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       weatherInfoLabel.hidden = shouldHideWeatherInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/p&gt;
&lt;p&gt;运行程序，运行良好。&lt;/p&gt;
&lt;h4 id=&quot;Animating-the-axis&quot;&gt;&lt;a href=&quot;#Animating-the-axis&quot; class=&quot;headerlink&quot; title=&quot;Animating the axis&quot;&gt;&lt;/a&gt;Animating the axis&lt;/h4&gt;&lt;p&gt;下面修改一下rating 部分的动画，使其在不同情况下按照不同的方向显示。&lt;br&gt;将storyboard的中的rating stack view与对应的类连线，创建IBOutlet属性@IBOutlet weak var ratingStackView: UIStackView!。修改对应方法如下（注释add是新添加的）&lt;br&gt; &lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;updateWeatherInfoViews&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(hideWeatherInfo shouldHideWeatherInfo: Bool, animated: Bool)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; newButtonTitle = shouldHideWeatherInfo ? &lt;span class=&quot;string&quot;&gt;&quot;Show&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;Hide&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  weatherHideOrShowButton.setTitle(newButtonTitle, forState: .&lt;span class=&quot;type&quot;&gt;Normal&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; Animate when animated == true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; animated &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;UIView&lt;/span&gt;.animateWithDuration(&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          delay: &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          usingSpringWithDamping: &lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          initialSpringVelocity: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          options: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          animations: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.weatherInfoLabel.hidden = shouldHideWeatherInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;, completion: &amp;#123; finished &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;type&quot;&gt;UIView&lt;/span&gt;.animateWithDuration(&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.ratingStackView.axis = shouldHideWeatherInfo ? .&lt;span class=&quot;type&quot;&gt;Vertical&lt;/span&gt; : .&lt;span class=&quot;type&quot;&gt;Horizontal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      weatherInfoLabel.hidden = shouldHideWeatherInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.ratingStackView.axis = shouldHideWeatherInfo ? .&lt;span class=&quot;type&quot;&gt;Vertical&lt;/span&gt; : .&lt;span class=&quot;type&quot;&gt;Horizontal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;继续接着上篇文章介绍UIStackView，这一篇将涉及到一些稍微深一点的知识点。&lt;/p&gt;
&lt;h3 id=&quot;Getting-started&quot;&gt;&lt;a href=&quot;#Getting-started&quot; class=&quot;headerlink&quot; title=&quot;Getting started&quot;&gt;&lt;/a&gt;Getting started&lt;/h3&gt;&lt;p&gt;首先回顾一下我们计划完善SpotInfoViewController需要完成的任务情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;底部按钮间距不相同。 完成。&lt;/li&gt;
&lt;li&gt;点击Hide按钮，底部的内容应该填充空白位置。 未完成。&lt;/li&gt;
&lt;li&gt;交换what to see和weather两部分的内容。 未完成。&lt;/li&gt;
&lt;li&gt;weather详情隐藏的时候，rating部分纵向显示。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Converting-the-sections&quot;&gt;&lt;a href=&quot;#Converting-the-sections&quot; class=&quot;headerlink&quot; title=&quot;Converting the sections&quot;&gt;&lt;/a&gt;Converting the sections&lt;/h3&gt;&lt;p&gt;在完成上面的任务之前，你需要将SpotInfoViewController中的所有的sections转换为使用stack view。在下面的内容中能够学到一下配置stack view的属性，例如alignment、distribution和spacing。&lt;/p&gt;
&lt;h4 id=&quot;Rating-section&quot;&gt;&lt;a href=&quot;#Rating-section&quot; class=&quot;headerlink&quot; title=&quot;Rating section&quot;&gt;&lt;/a&gt;Rating section&lt;/h4&gt;
    
    </summary>
    
      <category term="iOS 9 by Tutoials" scheme="http://mengxiangyue.com/categories/iOS-9-by-Tutoials/"/>
    
    
      <category term="iOS 9" scheme="http://mengxiangyue.com/tags/iOS-9/"/>
    
  </entry>
  
  <entry>
    <title>MAC上Nuclide的安装</title>
    <link href="http://mengxiangyue.com/2016/01/21/MAC%E4%B8%8ANuclide%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://mengxiangyue.com/2016/01/21/MAC上Nuclide的安装/</id>
    <published>2016-01-21T15:10:24.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;p&gt;Nuclide是Facebook开发的开发React Native的开发工具，基于Github的Atom开发，以Atom插件的形式存在。在MAC版Atom安装插件可以使用系统自带的插件安装方式安装：Atom-&amp;gt;Preferences..-&amp;gt;Install,搜索Nuclide-installer,点击install就可以安装Nuclide了。安装完了是不是很幸福，能开心的编程了。啊啊啊啊啊…..但是事实并非如此，打开编辑器发现根本不能用，卡成翔了，查看一下进程，发现有个AtomHelper CPU占用率超过100%了。去github查看issue发现好多人都遇到了这个问题。自己试验了半天找到了一种安装方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;删除已经安装的Nuclide插件&lt;br&gt;这里我是直接卸载Atom，这样能够删除安静。对于曾经安装的插件，记录下来，重新安装。&lt;/li&gt;
&lt;li&gt;编译Nuclide&lt;br&gt;从&lt;a href=&quot;https://github.com/facebook/nuclide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/facebook/nuclide&lt;/a&gt;下载Nuclide，终端进入下载后的目录，执行命令 &lt;strong&gt;./scripts/dev/setup&lt;/strong&gt; 。编译的过程中如果没有出现错误信息，就表示编译成功了。将文件夹重命名为nuclide，然后拷贝到~/.atom/packages/目录下。重启Atom，第一次启动应该比较慢，等启动结束后进入Atom-&amp;gt;Preferences..-&amp;gt;Packages，如果列出了nuclide，表示安装成功了。  &lt;/li&gt;
&lt;li&gt;升级flow&lt;br&gt;这样安装后可能flow不能使用，因为.flowconfig文件末尾会有一个版本，如果我们本地版本低于其中配置的版本将不能使用flow，我们可以直接删除这个版本配置，这样就能使用了。但是这个并不是好的解决方案，好的解决方案是将flow升级到最新版本。在终端中执行如下命令：&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;brew update
brew upgrade flow
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;升级后应该flow就能正常使用了。   &lt;/p&gt;
&lt;p&gt;这样就能够正常的使用Nuclide了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Nuclide是Facebook开发的开发React Native的开发工具，基于Github的Atom开发，以Atom插件的形式存在。在MAC版Atom安装插件可以使用系统自带的插件安装方式安装：Atom-&amp;gt;Preferences..-&amp;gt;Install,搜索N
    
    </summary>
    
      <category term="React Native" scheme="http://mengxiangyue.com/categories/React-Native/"/>
    
    
      <category term="React Native" scheme="http://mengxiangyue.com/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>iOS9 by Tutorials 学习笔记六：UIStackView &amp; Auto Layout Changes</title>
    <link href="http://mengxiangyue.com/2016/01/13/iOS9-by-Tutorials-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%85%AD%EF%BC%9AUIStackView-Auto-Layout-Changes/"/>
    <id>http://mengxiangyue.com/2016/01/13/iOS9-by-Tutorials-学习笔记六：UIStackView-Auto-Layout-Changes/</id>
    <published>2016-01-13T14:20:34.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;p&gt;今天这是第六篇笔记，现在回过头去看，我也没有想到自己能够更新到第六篇。我算是一个比较懒的人了，现在已经不太喜欢动手敲代码了。在写这几篇笔记的时候，我需要一边看英文的文档，一边测试代码，还得考虑怎么能够写明白。这里有点说明，我的英语水平只是四级，语文水平只能用呵呵评价了，文章中的语句难免会有不通顺的地方，希望能够把语义表述清楚。    &lt;/p&gt;
&lt;p&gt;闲话多了，回到正题，这篇文章介绍UIStackView和一些Auto Layout的改变。   &lt;/p&gt;
&lt;p&gt;UIStackView我个人理解是为了解决使用Storyboard添加的约束需要经常变化的情况。我想我们可能都在开发中遇到过修改约束的情况，一般是把约束与一个outlet的约束link起来，然后代码修改，但是这个操作起来是不方便的。UIStackView通过修改一些简单的属性，例如alignment, distribution, and spacing，从而让UIStackView根据我们的修改自动调整内部的显示。    &lt;/p&gt;
&lt;p&gt;Auto Layout的改变主要是介绍layout anchors和layout guides。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Getting-Started&quot;&gt;&lt;a href=&quot;#Getting-Started&quot; class=&quot;headerlink&quot; title=&quot;Getting Started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;&lt;p&gt;打开本章的配套的工程VacationSpots，在iPhone 6模拟器上运行，能够看到APP有一些UI的问题，不要担心，在后面将会修复这些问题。简单梳理一下问题如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;图中标出的内容没有在垂直方向居中&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/01.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击列表中的London Cell进入详情页面，最下面的三个按钮没有平均分配空间：&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/02.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击WEATHER旁边的hide按钮，内容是被隐藏了，但是留下了一块空白，下面的内容没有移动上来：&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/03.png&quot; alt=&quot;&quot;&gt;    &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WHAT TO SEE 部分在WHY VISIT的下面会更加合理一点。  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在已经了解了这些问题，下面开始用UIStackView来修改这些问题。打开Main.storyboard，查看如下的Controller scene：&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/04.png&quot; alt=&quot;&quot;&gt;    &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;能够注意到上面的每个对应的控件都有背景颜色，这个只是为了帮助我们查看这些属性的变化。这些背景颜色在运行的时候都会被去掉，通过如下代码，如果你想让它们在运行的时候也显示注释掉这些代码就可以：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// SpotInfoViewController.swift&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewDidLoad()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Clear background colors from labels and buttons&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; view &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; backgroundColoredViews &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      view.backgroundColor = &lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt;.clearColor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ........&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在Storyboard中的的控件都通过outlet与SpotInfoViewController.swift中对应的属性进行了关联。在storyboard中显示的名字对应SpotInfoViewController.swift对应的变量。  &lt;/p&gt;
&lt;h4 id=&quot;Your-first-stack-view&quot;&gt;&lt;a href=&quot;#Your-first-stack-view&quot; class=&quot;headerlink&quot; title=&quot;Your first stack view&quot;&gt;&lt;/a&gt;Your first stack view&lt;/h4&gt;&lt;p&gt;我们先用Stack View解决我们问题列表中底部按钮的问题。使用UIStackView能够在一个坐标抽上分配位置和控件之间的空间。幸运的是将Views嵌入到UIStackView中并没有太难。在Storyboard中的Spot Info View Controller选择如下三个按钮控件：&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/05.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;选择好三个按钮后，在Storyboard中点击如下的按钮：&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/06.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;当Views被嵌入UIStackView之后，Views的约束都被移除了，同时需要设置UIStackView的约束。选中UIStackView，然后按照如图添加约束：&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/07.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里有个选择UIStackView的技巧，由于UIStackView是在按钮的后面，很不好选中，我们可以按住Shift，右击，在出现的菜单中列出来当前点击位置所有的View，我们可以选择UIstackView。另一种方法我们可以在outline view中选择。   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设置好约束后，能够看到按钮显示如下，第一个按钮被拉伸了，填充满了UIStackView的剩余空间。UIstackView有一个Distribution属性，用于控制Views怎么在UIStackView中显示，现在设置的是Fill，即将会填充满UIStackView。为了这个目的，UIstackView将会根据View的ccontent hugging优先级去拉伸View，最低的将会被拉伸。如果优先级一样，将会拉伸第一个。&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/08.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;我们的目的是让View间的距离相等，在Attributes inspector中修改Distribution为Equal Spacing。&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/09.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;运行APP，能够看到我们的按钮显示正确了：&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/10.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;h4 id=&quot;一些思考&quot;&gt;&lt;a href=&quot;#一些思考&quot; class=&quot;headerlink&quot; title=&quot;一些思考&quot;&gt;&lt;/a&gt;一些思考&lt;/h4&gt;&lt;p&gt;思考一下你使用Auto Layout，通过约束实现上面的要求，那将是一种什么令人”愉悦”的行为。可能你很熟悉Auto Layout，认为这些东西都很简单，那么你在考虑一下如果我们后面有需求添加一个按钮，删除一个按钮呢，怎么办呢？约束删除了重新添加吗？如果使用UIStackView，这些将变得比较简单，只要我们添加或者删除View，其他的工作UIstackView就会帮我们做了。    &lt;/p&gt;
&lt;p&gt;UISTackView的更加深入的讲解，将会在下一篇文章中继续介绍。这里先介绍一下Auto Layout的新特性：layout anchors和layout guides。&lt;/p&gt;
&lt;h3 id=&quot;Layout-anchors&quot;&gt;&lt;a href=&quot;#Layout-anchors&quot; class=&quot;headerlink&quot; title=&quot;Layout anchors&quot;&gt;&lt;/a&gt;Layout anchors&lt;/h3&gt;&lt;p&gt;Layout anchors提供了我们一种简单的创建约束的方式。  &lt;/p&gt;
&lt;p&gt;想象一下我们在iOS 9之前创建一个约束，简直就是天书，但是在iOS 9中使用Layout anchors将会简单好多，下面是两种的对比：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// iOS9以前&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; constraint = &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;(item: topLabel, attribute: .&lt;span class=&quot;type&quot;&gt;Bottom&lt;/span&gt;, relatedBy: .&lt;span class=&quot;type&quot;&gt;Equal&lt;/span&gt;, toItem: bottomLabel, attribute: .&lt;span class=&quot;type&quot;&gt;Top&lt;/span&gt;, multiplier: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, constant: &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// iOS 9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; constraint = topLabel.bottomAnchor.constraintEqualToAnchor(bottomLabel.topAnchor, constant: &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;Layout anchors不仅理解起来简单，而且写起来也简单了。   &lt;/p&gt;
&lt;p&gt;对应于我们在iOS 9以前添加约束时候的attribute，基本都有与之对应的anchor，例如top对应topAnchor，bottom对应bottomAnchor等。Layout Anchor都是直接或者间接继承自NSLayoutAnchor，上面只是演示了一下相等的情况，我们都知道在约束中又大于小于等，下面列出NSLayoutAnchor的接口文件，从接口文件中能够清楚的了解到对应的方法：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*	NSLayoutAnchor.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Copyright (c) 2015, Apple Inc. All rights reserved.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* An NSLayoutAnchor represents an edge or dimension of a layout item.  Its concrete &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; subclasses allow concise creation of constraints.  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Instead of invoking &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; +[NSLayoutConstraint constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; directly, you can instead do something like this:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [myView.topAnchor constraintEqualToAnchor:otherView.topAnchor constant:10];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; The -constraint* methods are available in multiple flavors to support use of different&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; relations and omission of unused options.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSLayoutAnchor&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* These methods return an inactive constraint of the form thisAnchor = otherAnchor.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutAnchor!)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintGreaterThanOrEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutAnchor!)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintLessThanOrEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutAnchor!)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* These methods return an inactive constraint of the form thisAnchor = otherAnchor + constant.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutAnchor!, constant &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintGreaterThanOrEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutAnchor!, constant &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintLessThanOrEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutAnchor!, constant &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* Axis-specific subclasses for location anchors: top/bottom, leading/trailing, baseline, etc.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSLayoutXAxisAnchor&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSLayoutAnchor&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSLayoutYAxisAnchor&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSLayoutAnchor&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* This layout anchor subclass is used for sizes (width &amp;amp; height).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSLayoutDimension&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSLayoutAnchor&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* These methods return an inactive constraint of the form &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        thisVariable = constant.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintEqualToConstant&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintGreaterThanOrEqualToConstant&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintLessThanOrEqualToConstant&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* These methods return an inactive constraint of the form &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        thisAnchor = otherAnchor * multiplier.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutDimension!, multiplier m: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintGreaterThanOrEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutDimension!, multiplier m: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintLessThanOrEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutDimension!, multiplier m: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* These methods return an inactive constraint of the form &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        thisAnchor = otherAnchor * multiplier + constant.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutDimension!, multiplier m: CGFloat, constant &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintGreaterThanOrEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutDimension!, multiplier m: CGFloat, constant &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constraintLessThanOrEqualToAnchor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(anchor: NSLayoutDimension!, multiplier m: CGFloat, constant &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;: CGFloat)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;在上面的接口文件中，我们能够清楚的了解到NSLayoutAnchor有三个子类：NSLayoutXAxisAnchor，NSLayoutYAxisAnchor，NSLayoutDimension。下面列出了UIView的Anchor都是对应的那种类型：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIView&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* Constraint creation conveniences. See NSLayoutAnchor.h for details.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; leadingAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutXAxisAnchor&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; trailingAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutXAxisAnchor&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; leftAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutXAxisAnchor&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; rightAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutXAxisAnchor&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; centerXAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutXAxisAnchor&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; topAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutYAxisAnchor&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bottomAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutYAxisAnchor&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; firstBaselineAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutYAxisAnchor&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; lastBaselineAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutYAxisAnchor&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; centerYAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutYAxisAnchor&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; widthAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutDimension&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; heightAnchor: &lt;span class=&quot;type&quot;&gt;NSLayoutDimension&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;上面UIView的Anchor属性被分成了三类，同样我们在设置属性的时候，也要求同类的属性的才能设置，比如ViewA和ViewB之间的约束，ViewA-topAnchor和ViewB-bottomAnchor是可以的，ViewA-topAnchor和ViewB-leftAnchor就是不允许的，如果这样的话编译器会警告，运行时也会报错。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意： whyVisitLabel.topAnchor.constraintEqualToAnchor(whatToSeeLabel.leftAnchor) 这个按照上面的说法应该会报错的，但是我在运行的时候也没有报错，可能是我这里只是随便写出一个做测试的原因，后续我会继续试验一下这个知识点，然后再改正。   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Layout-guides&quot;&gt;&lt;a href=&quot;#Layout-guides&quot; class=&quot;headerlink&quot; title=&quot;Layout guides&quot;&gt;&lt;/a&gt;Layout guides&lt;/h3&gt;&lt;p&gt;有时候我们想设置两个View之间的空间，需要在两个View之间添加一个不可见的View（dummy view），然后在设置约束。Layout guide可以理解为一个隐形的不可见View，我们能够使用它的矩形边缘来布局，我们可以像我们使用View一样设置约束。使用Layout guide的好处是轻量，而且不会在view的层级中，也不会参与事件的响应过程。layout guide也包含除了firstBaselineAnchor和lastBaselineAnchor之外的View所有的Anchor。 &lt;/p&gt;
&lt;h4 id=&quot;Fixing-the-alignment-bug&quot;&gt;&lt;a href=&quot;#Fixing-the-alignment-bug&quot; class=&quot;headerlink&quot; title=&quot;Fixing the alignment bug&quot;&gt;&lt;/a&gt;Fixing the alignment bug&lt;/h4&gt;&lt;p&gt;下面就利用layout guide来修复列表页面文字内容上下不居中的问题。看下图是我们设置的约束，我们设置label距离上面的距离是15，当下面的label显示一行的时候是正常的，如果要是两行了，由于上面的约束是固定的，最终就变成了不居中的效果了。&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/11.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;在iOS 9之前，我们想解决这个问题可以把两个label放置到一个container view容器中，设置这个container view为剧中，这里面的container view就是不可见的view即dummy view。现在在iOS 9上我们可以使用layout guide来代替这个view。   &lt;/p&gt;
&lt;p&gt;目前只能通过代码来添加layout guide。打开VacationSpotCell.swift文件，修改对应代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;awakeFromNib&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.awakeFromNib()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; Add layoutGuide code here to center the name and locationName labels vertically&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 创建layou guide&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; layoutGuide = &lt;span class=&quot;type&quot;&gt;UILayoutGuide&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    contentView.addLayoutGuide(layoutGuide)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 设置layout guide的约束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; topConstraint = layoutGuide.topAnchor.constraintEqualToAnchor(nameLabel.topAnchor)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; bottomConstraint = layoutGuide.bottomAnchor.constraintEqualToAnchor(locationNameLabel.bottomAnchor)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; centerConstraint = layoutGuide.centerYAnchor.constraintEqualToAnchor(contentView.centerYAnchor)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 激活layout guide的约束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;NSLayoutConstraint&lt;/span&gt;.activateConstraints([topConstraint, bottomConstraint, centerConstraint])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行APP发现，部分文字被截断了：&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/12.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;h4 id=&quot;处理截断问题&quot;&gt;&lt;a href=&quot;#处理截断问题&quot; class=&quot;headerlink&quot; title=&quot;处理截断问题&quot;&gt;&lt;/a&gt;处理截断问题&lt;/h4&gt;&lt;p&gt;这个原因是我们设置layout guide居中，但是nameLabel(上面的)与super view top的约束还存在，造成了下面的label被挤压了，这时候我们只要删除掉这个约束就可以了。但是删除了之后storyboard会提示错误，这时候我们可以使用占位约束，这个主要是为了使storyboard不报错，在运行的时候并不会使用。&lt;br&gt;&lt;img src=&quot;/images/2016.01.13/13.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;p&gt;最近一直在加班，断断续续整理了好久终于整理完了这篇文章了，可能会有错误，还请大家指出。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天这是第六篇笔记，现在回过头去看，我也没有想到自己能够更新到第六篇。我算是一个比较懒的人了，现在已经不太喜欢动手敲代码了。在写这几篇笔记的时候，我需要一边看英文的文档，一边测试代码，还得考虑怎么能够写明白。这里有点说明，我的英语水平只是四级，语文水平只能用呵呵评价了，文章中的语句难免会有不通顺的地方，希望能够把语义表述清楚。    &lt;/p&gt;
&lt;p&gt;闲话多了，回到正题，这篇文章介绍UIStackView和一些Auto Layout的改变。   &lt;/p&gt;
&lt;p&gt;UIStackView我个人理解是为了解决使用Storyboard添加的约束需要经常变化的情况。我想我们可能都在开发中遇到过修改约束的情况，一般是把约束与一个outlet的约束link起来，然后代码修改，但是这个操作起来是不方便的。UIStackView通过修改一些简单的属性，例如alignment, distribution, and spacing，从而让UIStackView根据我们的修改自动调整内部的显示。    &lt;/p&gt;
&lt;p&gt;Auto Layout的改变主要是介绍layout anchors和layout guides。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS 9 by Tutoials" scheme="http://mengxiangyue.com/categories/iOS-9-by-Tutoials/"/>
    
    
      <category term="iOS 9" scheme="http://mengxiangyue.com/tags/iOS-9/"/>
    
  </entry>
  
  <entry>
    <title>OC项目中使用Swift</title>
    <link href="http://mengxiangyue.com/2016/01/11/OC%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8Swift/"/>
    <id>http://mengxiangyue.com/2016/01/11/OC项目中使用Swift/</id>
    <published>2016-01-11T13:37:38.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;p&gt;最近公司的项目开始计划使用Swift，由于原先的工程都是使用OC编写的，不可能一下全部转换成Swift，所以采用OC与Swift混编的方式是最好的选择。这篇文章只是一个简单的介绍，并没有太高深的知识。&lt;/p&gt;
&lt;p&gt;我新建了一个演示的OC工程，当然你可以使用你已经存在的OC的工程。如果我们想要在OC工程中使用Swift的代码，Swift的代码默认是使用module管理的，同样这里我们也需要把我们的Swift代码作为一个module暴露给我们的OC工程，修改下面的配置：&lt;br&gt;&lt;img src=&quot;/images/2016.01.11/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上面的修改了一个配置项，有一个Product Module Name在后面会使用。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在工程里面点击File/New/File…,选择iOS/Source/Cocoa Touch Class,按照如下填写创建一个新的文件：&lt;br&gt;&lt;img src=&quot;/images/2016.01.11/02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图中的Subclass of一定要设置为NSObject或其子类，否则OC工程将不会找到该类。   &lt;/p&gt;
&lt;p&gt;点击确认后会选择保存路径，点击Create，出现如下界面：&lt;br&gt;&lt;img src=&quot;/images/2016.01.11/03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个界面是询问是否创建桥接的头文件，这个文件在Swift调用OC代码的时候比较管用，但是在OC中调用Swift的时候我发现没有什么卵用。   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;选择Don’t Create按钮。   &lt;/p&gt;
&lt;p&gt;在Test.swift中添加如下的代码(解释都在注释里面了)：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    如果Swift类想要被OC发现，必须继承自NSObject并且使用public标记，并且该类中想要被OC访问的方法也必须使用public标记，具体知识可以去看Swift的访问控制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    原因：Swift的代码对于OC来说是作为一个module存在的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    当然全局的Swift函数，我还没发现怎么在OC中访问，如果哪位清楚还请告诉一下，谢谢！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Test&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;这是Swift的方法&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;globalLog&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;这是Swift全局的log方法&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;我们在我们想要调用Swift类的方法里面引入头文件：”Product Module Name-Swift.h”,其中Product Module Name替换成在上面配置项中显示的内容，例如：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &quot;ViewController.h&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 引入Swift头文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &quot;OCAndSwift-Swift.h&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@implementation &lt;span class=&quot;type&quot;&gt;ViewController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewDidLoad &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 使用Swift的类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;Test&lt;/span&gt; *test = [[&lt;span class=&quot;type&quot;&gt;Test&lt;/span&gt; alloc] &lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [test log];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/p&gt;
&lt;p&gt;这样我们就能够在OC中使用Swift的代码了，最后还要说明一点：”Product Module Name-Swift.h”（例子中的是OCAndSwift-Swift.h），是由编译器自动生成的，如果import后没有提示，编译一下。并且只有在工程中包含至少一个Swift文件的时候，才会自动生成这个文件，所以如果工程中如果没有Swift文件的时候，就算在配置中设置对了，import该文件也会报错。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近公司的项目开始计划使用Swift，由于原先的工程都是使用OC编写的，不可能一下全部转换成Swift，所以采用OC与Swift混编的方式是最好的选择。这篇文章只是一个简单的介绍，并没有太高深的知识。&lt;/p&gt;
&lt;p&gt;我新建了一个演示的OC工程，当然你可以使用你已经存在的OC的工程。如果我们想要在OC工程中使用Swift的代码，Swift的代码默认是使用module管理的，同样这里我们也需要把我们的Swift代码作为一个module暴露给我们的OC工程，修改下面的配置：&lt;br&gt;&lt;img src=&quot;/images/2016.01.11/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上面的修改了一个配置项，有一个Product Module Name在后面会使用。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS Tips" scheme="http://mengxiangyue.com/categories/iOS-Tips/"/>
    
    
      <category term="iOS 9" scheme="http://mengxiangyue.com/tags/iOS-9/"/>
    
  </entry>
  
  <entry>
    <title>iOS9 by Tutorials 学习笔记五：Multitasking</title>
    <link href="http://mengxiangyue.com/2016/01/07/iOS9-by-Tutorials-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%94%EF%BC%9AMultitasking/"/>
    <id>http://mengxiangyue.com/2016/01/07/iOS9-by-Tutorials-学习笔记五：Multitasking/</id>
    <published>2016-01-07T15:10:56.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;p&gt;在WWDC 2015上，苹果推出了multitasking，这个功能允许我们同时运行两个App，比如在看视频的时候，能够同时刷微博，由于是同时运行两个App，对于硬件的要求比较高，目前苹果并没有在所有的设备上面开放这些功能。下面就简单的介绍一下multitasking。&lt;/p&gt;
&lt;h3 id=&quot;Getting-started&quot;&gt;&lt;a href=&quot;#Getting-started&quot; class=&quot;headerlink&quot; title=&quot;Getting started&quot;&gt;&lt;/a&gt;Getting started&lt;/h3&gt;&lt;p&gt;在书中与本章配套的有一个工程Travelog，打开这个工程，在iPad Air 2模拟器上运行一下。我们切换横竖屏，你能看到类似如下的界面：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Travelog App使用了UISpiltViewController来展示左边的列表，点击左边的列表，在右边会显示对应的详细信息。我们会更具这个App介绍一下multitasking的三种模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slide Over&lt;/li&gt;
&lt;li&gt;Split View&lt;/li&gt;
&lt;li&gt;Picture in Picture, or PIP&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Slide-Over&quot;&gt;&lt;a href=&quot;#Slide-Over&quot; class=&quot;headerlink&quot; title=&quot;Slide Over&quot;&gt;&lt;/a&gt;Slide Over&lt;/h4&gt;&lt;p&gt;我们沿着iPad的屏幕右边缘像左边滑动，这时候会浮动出来一个App的列表，点击其中的一个App，会显示如下，这种状态就是Slide Over模式：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在这种状态下，Travelog是不能使用的，只有我们弹出的日历App是可以使用的。&lt;/p&gt;
&lt;h4 id=&quot;Split-View&quot;&gt;&lt;a href=&quot;#Split-View&quot; class=&quot;headerlink&quot; title=&quot;Split View&quot;&gt;&lt;/a&gt;Split View&lt;/h4&gt;&lt;p&gt;注意一下在日历App左边有一个小的图标，点击那个图标后，Travelog将会和日历App同时显示在iPad的屏幕上，并且同时能够使用，这种状态就是Split View模式：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/03.png&quot; alt=&quot;&quot;&gt;    &lt;/p&gt;
&lt;h4 id=&quot;Picture-in-Picture-or-PIP&quot;&gt;&lt;a href=&quot;#Picture-in-Picture-or-PIP&quot; class=&quot;headerlink&quot; title=&quot;Picture in Picture, or PIP&quot;&gt;&lt;/a&gt;Picture in Picture, or PIP&lt;/h4&gt;&lt;p&gt;这种模式翻译成成中文是画中画，类似于电视上的画中画的功能。一个例子是我们可以在使用FaceTime的时候，同时使用其他的App。FaceTime将会被缩放到一个小的界面中，并且浮动在你使用的App上面。&lt;/p&gt;
&lt;h4 id=&quot;multitasking支持情况&quot;&gt;&lt;a href=&quot;#multitasking支持情况&quot; class=&quot;headerlink&quot; title=&quot;multitasking支持情况&quot;&gt;&lt;/a&gt;multitasking支持情况&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/2016.01.09/04.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;h3 id=&quot;让你的App支持multitasking&quot;&gt;&lt;a href=&quot;#让你的App支持multitasking&quot; class=&quot;headerlink&quot; title=&quot;让你的App支持multitasking&quot;&gt;&lt;/a&gt;让你的App支持multitasking&lt;/h3&gt;&lt;p&gt;如果你的App慢如如下的条件，那么你的App就能够支持multitasking。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是一个universal app&lt;/li&gt;
&lt;li&gt;使用SDK 9.x编译&lt;/li&gt;
&lt;li&gt;支持所有的方向&lt;/li&gt;
&lt;li&gt;使用launch storyboard   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;满足上面四个条件的APP只是能够支持multitasking，并不表示能够完美的适配。&lt;br&gt;Travelog 满足了上面的四个功能，但是它并没有完美的适配。   &lt;/p&gt;
&lt;h4 id=&quot;Orientation-and-size-changes&quot;&gt;&lt;a href=&quot;#Orientation-and-size-changes&quot; class=&quot;headerlink&quot; title=&quot;Orientation and size changes&quot;&gt;&lt;/a&gt;Orientation and size changes&lt;/h4&gt;&lt;p&gt;在Split View 模式下面运行 Travelog，旋转iPad为竖屏方向，显示如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/05.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;这是一个列表界面，能够看到左边有很大的空白，在后面的内容中，我们能够更好的利用这些空白区域。   &lt;/p&gt;
&lt;p&gt;旋转屏幕至横屏状态，如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/06.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;上面的界面也是列表界面，但是master列太窄了。   &lt;/p&gt;
&lt;p&gt;打开SplitViewController.swift文件，SplitViewController是UISplitViewController的子类，并且覆写了viewDidlayoutSubviews()， 用来更新主列的最大宽度。这个方法可能不起作用，因为在横屏Split view 模式下也可能出现窄的windown。  &lt;/p&gt;
&lt;p&gt;UIKit提供了下面几个方法用于捕获你的layout的变化:   &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;willTransitionToTraitCollection(_:, withTransitionCoordinator:)&lt;/li&gt;
&lt;li&gt;viewWillTransitionToSize(_:, withTransitionCoordinator:)&lt;/li&gt;
&lt;li&gt;traitCollectionDidChange(_:):   &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面展示了Size Classes的各种状态：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/07.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上图中 R 代表 Regular 而 C 代表 Compact   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据上图可以看出，并不是所有的multitasking和方向改变都会触发size class改变，所有你不能仅仅依靠size classes去提供最好的用户体验。我们可以viewWillTransitionToSize这个方法，在size classes改变的时候，做出正确的操作。   &lt;/p&gt;
&lt;p&gt;下面实际操作一下，在SplitViewController.swift删除viewDidLayoutSubviews() 和 updateMaximumPrimaryColumnWidth()方法，添加某些方法，最终如下（看注释）：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SplitViewController&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;UISplitViewController&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  需要删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  override func viewDidLayoutSubviews() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    super.viewDidLayoutSubviews()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    updateMaximumPrimaryColumnWidth()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;preferredStatusBarStyle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;UIStatusBarStyle&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;LightContent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  需要删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  // MARK: Helper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  func updateMaximumPrimaryColumnWidth() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    if UIInterfaceOrientationIsPortrait(UIApplication.sharedApplication().statusBarOrientation) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//      maximumPrimaryColumnWidth = 170.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//      maximumPrimaryColumnWidth = UISplitViewControllerAutomaticDimension&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 添加的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewDidLoad()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        updateMaximumPrimaryColumnWidthBasedOnSize(view.bounds.size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 添加的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 这是一个辅助方法 用于设置主列的最大宽度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;updateMaximumPrimaryColumnWidthBasedOnSize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(size: CGSize)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; size.width &amp;lt; &lt;span class=&quot;type&quot;&gt;UIScreen&lt;/span&gt;.mainScreen().bounds.width || size.width &amp;lt; size.height &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            maximumPrimaryColumnWidth = &lt;span class=&quot;number&quot;&gt;170.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            maximumPrimaryColumnWidth = &lt;span class=&quot;type&quot;&gt;UISplitViewControllerAutomaticDimension&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 添加的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;viewWillTransitionToSize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(size: CGSize, withTransitionCoordinator coordinator: UIViewControllerTransitionCoordinator)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewWillTransitionToSize(size,withTransitionCoordinator: coordinator)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        updateMaximumPrimaryColumnWidthBasedOnSize(size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;运行程序app最终效果如下，能够看出来app的主列的宽度体验更好一点了。&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/08.png&quot; alt=&quot;&quot;&gt;    &lt;/p&gt;
&lt;p&gt;仔细看一下没行的内容，能够看到我们行上的内容，还是有问题的。应该是我们的cell没有响应size的变化。打开LogCell.swift找到layoutSubviews()的实现，能够发现代码检查的是UIScreen.mainScreen().bounds.width，再决定cell是使用Compact view还是regular view。 UIScreen代表整个屏幕，不去理会multitasking的状态。你不能再依赖屏幕尺寸来判断了。更新如下代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; widthThreshold: &lt;span class=&quot;type&quot;&gt;CGFloat&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;180.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;layoutSubviews&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.layoutSubviews()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;// 修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    let isTooNarrow = UIScreen.mainScreen().bounds.width &amp;lt; LogCell.widthThreshold&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; isTooNarrow = bounds.width &amp;lt;= &lt;span class=&quot;type&quot;&gt;LogCell&lt;/span&gt;.widthThreshold&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   compactView.hidden = !isTooNarrow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   regularView.hidden = isTooNarrow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;修改后运行效果如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/09.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Adaptive-presentation&quot;&gt;&lt;a href=&quot;#Adaptive-presentation&quot; class=&quot;headerlink&quot; title=&quot;Adaptive presentation&quot;&gt;&lt;/a&gt;Adaptive presentation&lt;/h3&gt;&lt;p&gt;在如下状态下面点击 Photo Library bar button，能够看到如下效果：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/10.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在上图状态下拖动中间的标志，使APP为5：5模式，效果如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/11.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;能够注意到，我们没有做任何改变，但是我们从33%变成50%的时候，弹出的模态菜单变成了整个页面。这个效果是由UIPopoverPresentationController控制的，而我们想要的效果是是只有APP在Slide Over模式或者作为第二APP并且在33%的时候才会使用popover。我们可以设置UIPopoverPresentationController的delegate来实现我们的行为。   &lt;/p&gt;
&lt;p&gt;打开LogsViewController.swift，添加如下代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LogsViewController&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;UIPopoverPresentationControllerDelegate&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;adaptivePresentationStyleForPresentationController&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( controller: UIPresentationController,traitCollection: UITraitCollection)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;UIModalPresentationStyle&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//1 判断是iPad&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; traitCollection.userInterfaceIdiom == .&lt;span class=&quot;type&quot;&gt;Pad&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;FullScreen&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 宽度大于320使用popover&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; splitViewController?.view.bounds.width &amp;gt; &lt;span class=&quot;number&quot;&gt;320&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;FullScreen&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/p&gt;
&lt;p&gt;下面找到如下方法设置代理：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;presentImagePickerControllerWithSourceType&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sourceType: UIImagePickerControllerSourceType)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; controller = &lt;span class=&quot;type&quot;&gt;UIImagePickerController&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    controller.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    controller.sourceType = sourceType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    controller.mediaTypes = [&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;(kUTTypeImage), &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;(kUTTypeMovie)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    controller.view.tintColor = &lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt;.themeTineColor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; sourceType == &lt;span class=&quot;type&quot;&gt;UIImagePickerControllerSourceType&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;PhotoLibrary&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      controller.modalPresentationStyle = .&lt;span class=&quot;type&quot;&gt;Popover&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; presenter = controller.popoverPresentationController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      presenter?.sourceView = view&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      presenter?.barButtonItem = photoLibraryButton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      presenter?.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 添加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    presentViewController(controller, animated: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, completion: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最终运行的效果如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/12.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;算是完成了这一篇笔记吧，可能跟书中不完全一样，感觉这篇文章只是简单介绍了一下，如果想更多了解请查看：&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/AdoptingMultitaskingOniPad/index.html#//apple_ref/doc/uid/TP40015145-CH3-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;苹果文档&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在WWDC 2015上，苹果推出了multitasking，这个功能允许我们同时运行两个App，比如在看视频的时候，能够同时刷微博，由于是同时运行两个App，对于硬件的要求比较高，目前苹果并没有在所有的设备上面开放这些功能。下面就简单的介绍一下multitasking。&lt;/p&gt;
&lt;h3 id=&quot;Getting-started&quot;&gt;&lt;a href=&quot;#Getting-started&quot; class=&quot;headerlink&quot; title=&quot;Getting started&quot;&gt;&lt;/a&gt;Getting started&lt;/h3&gt;&lt;p&gt;在书中与本章配套的有一个工程Travelog，打开这个工程，在iPad Air 2模拟器上运行一下。我们切换横竖屏，你能看到类似如下的界面：&lt;br&gt;&lt;img src=&quot;/images/2016.01.09/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS 9 by Tutoials" scheme="http://mengxiangyue.com/categories/iOS-9-by-Tutoials/"/>
    
    
      <category term="iOS 9" scheme="http://mengxiangyue.com/tags/iOS-9/"/>
    
  </entry>
  
  <entry>
    <title>iOS9 by Tutorials 学习笔记四：APP 瘦身</title>
    <link href="http://mengxiangyue.com/2016/01/04/iOS9-by-Tutorials-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9B%EF%BC%9AAPP-%E7%98%A6%E8%BA%AB/"/>
    <id>http://mengxiangyue.com/2016/01/04/iOS9-by-Tutorials-学习笔记四：APP-瘦身/</id>
    <published>2016-01-04T14:26:09.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;这篇文章在书中的标题是App Thinning，这里我给翻译成了App 瘦身。&lt;/p&gt;
&lt;p&gt;本文然然进行了一些语法的修改，很开心她为我修改这些东西。她说我转折只会用但是，被她这么一说想想还真是只是会用但是，嘿嘿。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;iPhone经过这几年的发展，已经发生了很大的变化，例如屏幕变得更加多样，尺寸更多，内存变得更大，CPU的架构也在变化。伴随着iPhone的变化，iOS也在变化，例如AutoLayout、size classes、split view controller等。这些技术及设备的变化给我在开发的过程中也造成了许多的问题，不仅如此苹果通过不断推出新的技术，努力在帮助我们使用同一套代码开发适应多个设备的Universal的App。另一方面Universal App虽然在开发的过程中，方便了我们开发人员，可是对于用户来说就不那么友好了，由于需要适配多种设备，所以里包含所有设备的代码，但真正的在运行的时候，我们并不需要那么多相关的代码及资源。    &lt;/p&gt;
&lt;p&gt;例如下面的一张图，是一个App运行在iPhone 6+上，使用的各个资源相关的情况：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.01.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;上图中对勾标出来的是在iPhone 6+上真实运行的时候使用到的相关的资源及代码，对比有对勾的部分，更多的是没有被对勾标出来的部分。可以想象我们下载了一个App（前提这个App是Universal的），然后至少一半的代码及资源是我们不需要的，白白占用着我们的空间。这样对用户体验也不好。为了解决这个问题苹果在iOS 9给出了新的解决方案：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;App Slicing 当你提交你的iOS 9 打包文件到App Store的时候，苹果编译你的资源和可执行文件，然后为每个设备生成一个特定的可执行文件。最终，设备只会下载适应与其特性的，并且它使用到的内容。这些特性包含显卡性能（原文单词：graphics capabilities）、内存级别、CPU架构、size classes、屏幕 scaling等。  &lt;/li&gt;
&lt;li&gt;On Demand Resouces 应用程序的资源只有在需要使用的时候才会下载，并且如果其他资源需要空间这些资源可以被移除。&lt;/li&gt;
&lt;li&gt;Bitcode 在你提交App到App Store的时候，Bitcode可以作为中间产物一起提交。包含bitcode配置的程序将会在App store上被编译和链接。bitcode允许苹果在后期重新优化我们程序的二进制文件，而不需要我们重新提交一个新的版本到App store上。   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这三个技术加起来，统一称为App Thinning。&lt;/p&gt;
&lt;h3 id=&quot;Getting-started&quot;&gt;&lt;a href=&quot;#Getting-started&quot; class=&quot;headerlink&quot; title=&quot;Getting started&quot;&gt;&lt;/a&gt;Getting started&lt;/h3&gt;&lt;p&gt;打开本章节的初始项目，然后选在iPad Air 2运行，这时候运行效果如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;伴随着模拟器启动起来的还打开了一个Finder窗口：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个Finder窗口能够打开，是因为在程序中添加了一个脚本，每次运行的时候都会执行，脚本所在地方如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.04.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;App Size in KB:  `du -sk \&amp;quot;$&amp;#123;CONFIGURATION_BUILD_DIR&amp;#125;/$&amp;#123;EXECUTABLE_NAME&amp;#125;.app\&amp;quot;`&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ &amp;quot;$&amp;#123;CONFIGURATION&amp;#125;&amp;quot; = &amp;quot;Debug&amp;quot; ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;open $&amp;#123;CONFIGURATION_BUILD_DIR&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;在Finder的Old CA Maps点击右键，选择显示包内容，如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.05.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;上图中标注的说明如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Assets.car是Assets.xcassets被Xcode进行编译后的文件。&lt;/li&gt;
&lt;li&gt;Old CA Maps是真实运行在设备上的可执行文件。&lt;/li&gt;
&lt;li&gt;Santa Cruz PNGs 这个是图片文件，但是没有被编译到Assets.car文件中，这是因为它并没有放到Assets.xcassets中，而是放到了工程的顶层文件中。&lt;/li&gt;
&lt;li&gt;SD_Map.bundle 这个就是地图图片文件，但是将近120MB。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Measuring-your-work&quot;&gt;&lt;a href=&quot;#Measuring-your-work&quot; class=&quot;headerlink&quot; title=&quot;Measuring your work&quot;&gt;&lt;/a&gt;Measuring your work&lt;/h4&gt;&lt;p&gt;本章介绍一些App瘦身相关的东西，所以我们必须能够测量App是否减少了。工程里面已经内置了一个脚本（上面代码里面有），能够在build的过程中输出App的大小。查看的位置如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.06.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;h3 id=&quot;Slicing-up-app-slicing&quot;&gt;&lt;a href=&quot;#Slicing-up-app-slicing&quot; class=&quot;headerlink&quot; title=&quot;Slicing up app slicing&quot;&gt;&lt;/a&gt;Slicing up app slicing&lt;/h3&gt;&lt;p&gt;App slicing包含两部分内容：可执行文件分片（Executable slicing）和资源分片（resource slicing）。    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Executable slicing&lt;/strong&gt; 指的是在设备下载App的时候会根据设备的相关信息只是下载对应该设备的相关的可执行文件，并不会包含其他设备及架构的可执行文件，达到App安装包的缩小。并且这个功能并不需要我们做太多，App Store默认支持的。   &lt;/p&gt;
&lt;p&gt;默认情况下提交到App Store的包是包含所有的内容的，这些都在配置文件里面，App Store会自动创建对应于每个类型的可执行文件。这个在iOS9+上支持。&lt;/p&gt;
&lt;h4 id=&quot;Being-smart-with-resources&quot;&gt;&lt;a href=&quot;#Being-smart-with-resources&quot; class=&quot;headerlink&quot; title=&quot;Being smart with resources&quot;&gt;&lt;/a&gt;Being smart with resources&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Resource slicing&lt;/strong&gt; 需要我们一小部分简单的工作就能实现。如果使用Resource slicing，则要保证我们的资源都被Asset Catalogs管理。在Xcode 7中，能够标记资源被使用设备的 &lt;strong&gt;Memory&lt;/strong&gt; 和 &lt;strong&gt;Graphics&lt;/strong&gt; ，如下：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.07.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;Your-first-fix&quot;&gt;&lt;a href=&quot;#Your-first-fix&quot; class=&quot;headerlink&quot; title=&quot;Your first fix&quot;&gt;&lt;/a&gt;Your first fix&lt;/h5&gt;&lt;p&gt;在开始的时候介绍过Santa Cruz PNGs这个文件因为被放到Main bundle中，所以不能被编译进入到Assets.car，进而也不能使用Resource slicing。下面看一下我们怎么修改，使其能够使用：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.08.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;选择New Image Set后，将新加入的set命名为Santa Cruz，紧接着做如下操作：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.09.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;纠正一下 上图左边的内容应该是删除，包括在Finder内也应该删除   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后在不同的设备上运行App，最后发现Asset.car文件的大小并不一致。这个是因为在安装的时候，会根据设备安装对应的资源。   &lt;/p&gt;
&lt;h5 id=&quot;Lazily-down-loading-content&quot;&gt;&lt;a href=&quot;#Lazily-down-loading-content&quot; class=&quot;headerlink&quot; title=&quot;Lazily (down)loading content&quot;&gt;&lt;/a&gt;Lazily (down)loading content&lt;/h5&gt;&lt;p&gt;苹果提供On-Demand Resources技术，简称ODR。ODR允许你将资源存储在苹果的服务器上，然后在你App使用的时候再去下载。NSBundleResourceRequest是处理ODR的类，使用这个类能够通过tag下载对应的资源。images, data, OpenGL shaders, SpriteKit Particles, Watchkit Complications等都可以使用ODR。&lt;/p&gt;
&lt;h5 id=&quot;Wire-things-up-to-use-tags&quot;&gt;&lt;a href=&quot;#Wire-things-up-to-use-tags&quot; class=&quot;headerlink&quot; title=&quot;Wire things up to use tags&quot;&gt;&lt;/a&gt;Wire things up to use tags&lt;/h5&gt;&lt;p&gt;下面我们修改代码，实现资源的下载，修改MapChromeViewController.swift对应方法如下：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;downloadAndDisplayMapOverlay&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    displayOverlayFromBundle(NSBundle.mainBundle())&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; bundleTitle = mapOverlayData?.bundleTitle &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; bundleResource = &lt;span class=&quot;type&quot;&gt;NSBundleResourceRequest&lt;/span&gt;(tags: [bundleTitle])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bundleResource.beginAccessingResourcesWithCompletionHandler &amp;#123; [&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;] (error) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;NSOperationQueue&lt;/span&gt;.mainQueue().addOperationWithBlock(&amp;#123; () -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; error == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;?.displayOverlayFromBundle(bundleResource.bundle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;    &lt;/p&gt;
&lt;p&gt;这时候我们运行代码，可能会在控制台输出错误，这是因为我们对应的bundle并没有tag，我们需要给bundle添加tag：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.10.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后我们重新编译运行我们的程序，然后按照上面的查看编译运行的程序的大小，发现小了许多。对比之前的编译生成的文件，发现运行文件里面不包含bundle了。&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.11.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你的App在App Store上可能这个资源文件下载的很慢。但是在开发的过程中，Xcode会利用本地网络作为服务器，然后在设备上能够下载到，所以在开发的过程中如果电脑关了，那ODR也就不能使用了。   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Make-it-download-faster&quot;&gt;&lt;a href=&quot;#Make-it-download-faster&quot; class=&quot;headerlink&quot; title=&quot;Make it download faster&quot;&gt;&lt;/a&gt;Make it download faster&lt;/h4&gt;&lt;p&gt;在我们使用ODR的过程中，如果bundle比较大，可能再下载的过程中就会比较耗时，并且在下载过程中用户不知道，这样用户体验就不好。我们可以再Resource下载的过程中给用户一些提示，修改下面的代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// add 为新添加的 ProgressView是程序已经添加上的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;downloadAndDisplayMapOverlay&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    displayOverlayFromBundle(NSBundle.mainBundle())&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; bundleTitle = mapOverlayData?.bundleTitle &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; bundleResource = &lt;span class=&quot;type&quot;&gt;NSBundleResourceRequest&lt;/span&gt;(tags: [bundleTitle])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bundleResource.loadingPriority = &lt;span class=&quot;type&quot;&gt;NSBundleResourceRequestLoadingPriorityUrgent&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  loadingProgressView.observedProgress = bundleResource.progress &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  loadingProgressView.hidden = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;UIApplication&lt;/span&gt;.sharedApplication().networkActivityIndicatorVisible = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bundleResource.beginAccessingResourcesWithCompletionHandler &amp;#123; [&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;] (error) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;NSOperationQueue&lt;/span&gt;.mainQueue().addOperationWithBlock(&amp;#123; () -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;?.loadingProgressView.hidden = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;UIApplication&lt;/span&gt;.sharedApplication().networkActivityIndicatorVisible = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; error == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;?.displayOverlayFromBundle(bundleResource.bundle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果用户已经下载过某个bundle，下次在使用的时候就不会再去下载了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;The-many-flavors-of-tagging&quot;&gt;&lt;a href=&quot;#The-many-flavors-of-tagging&quot; class=&quot;headerlink&quot; title=&quot;The many flavors of tagging&quot;&gt;&lt;/a&gt;The many flavors of tagging&lt;/h4&gt;&lt;p&gt;虽然添加了ProgressView，在体验是好了一点，但是需要注意测试的时候是使用的本地的网络，所以比较快，但是如果要是提交到App Store上，那可能下载就是比较慢了，如果再配上用户没有WiFi那可能就没法用了，所以我们还需要做其他的一些调整。&lt;/p&gt;
&lt;h5 id=&quot;Initial-install-tags&quot;&gt;&lt;a href=&quot;#Initial-install-tags&quot; class=&quot;headerlink&quot; title=&quot;Initial install tags&quot;&gt;&lt;/a&gt;Initial install tags&lt;/h5&gt;&lt;p&gt;使用Initial install tags，我们可以设置哪些bundle会在我们App初始化安装的时候就会被下载。 下面下介绍一下ODR三种下载的时机吧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Initial Install Tags&lt;/strong&gt; 在ipa下载的时候一同下载&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prefetched Tag Order&lt;/strong&gt; 在程序下载完成后，下载对应的资源，然后按顺序排列。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prefetched Tag Order&lt;/strong&gt; 按需下载&lt;br&gt;下面是配置的地方：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.12.png&quot; alt=&quot;&quot;&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Purging-content&quot;&gt;&lt;a href=&quot;#Purging-content&quot; class=&quot;headerlink&quot; title=&quot;Purging content&quot;&gt;&lt;/a&gt;Purging content&lt;/h4&gt;&lt;p&gt;应用程序在使用的过程中通过ODR下载了对应的bundle，但是有时候我们需要清理一些已经下载过的并且不使用的bundle。在介绍怎么删除之前先看一下怎么查看下载的ODR：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.13.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;h5 id=&quot;Set-a-resource-to-be-purged&quot;&gt;&lt;a href=&quot;#Set-a-resource-to-be-purged&quot; class=&quot;headerlink&quot; title=&quot;Set a resource to be purged&quot;&gt;&lt;/a&gt;Set a resource to be purged&lt;/h5&gt;&lt;p&gt;在MapChromeViewController.swift添加如下代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// new add 是新加的代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; overlayBundleResource: &lt;span class=&quot;type&quot;&gt;NSBundleResourceRequest&lt;/span&gt;? &lt;span class=&quot;comment&quot;&gt;// new add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;downloadAndDisplayMapOverlay&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    displayOverlayFromBundle(NSBundle.mainBundle())&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; bundleTitle = mapOverlayData?.bundleTitle &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; bundleResource = &lt;span class=&quot;type&quot;&gt;NSBundleResourceRequest&lt;/span&gt;(tags: [bundleTitle])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    overlayBundleResource = bundleResource &lt;span class=&quot;comment&quot;&gt;// new add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bundleResource.loadingPriority = &lt;span class=&quot;type&quot;&gt;NSBundleResourceRequestLoadingPriorityUrgent&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loadingProgressView.observedProgress = bundleResource.progress &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loadingProgressView.hidden = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;UIApplication&lt;/span&gt;.sharedApplication().networkActivityIndicatorVisible = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bundleResource.beginAccessingResourcesWithCompletionHandler &amp;#123; [&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;] (error) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;NSOperationQueue&lt;/span&gt;.mainQueue().addOperationWithBlock(&amp;#123; () -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;?.loadingProgressView.hidden = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;UIApplication&lt;/span&gt;.sharedApplication().networkActivityIndicatorVisible = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; error == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;?.displayOverlayFromBundle(bundleResource.bundle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// new add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;viewDidDisappear&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(animated: Bool)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewDidDisappear(animated)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 告诉系统结束了对资源的访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    overlayBundleResource?.endAccessingResources()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的代码，我做测试的时候不清楚会在什么时候会删除，我也模拟了内存警告，如果谁清楚，还请告诉我，谢谢。&lt;/p&gt;
&lt;p&gt;坚持了好几天中午写完了，这篇笔记，一篇笔记13张截图，好累。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这篇文章在书中的标题是App Thinning，这里我给翻译成了App 瘦身。&lt;/p&gt;
&lt;p&gt;本文然然进行了一些语法的修改，很开心她为我修改这些东西。她说我转折只会用但是，被她这么一说想想还真是只是会用但是，嘿嘿。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;iPhone经过这几年的发展，已经发生了很大的变化，例如屏幕变得更加多样，尺寸更多，内存变得更大，CPU的架构也在变化。伴随着iPhone的变化，iOS也在变化，例如AutoLayout、size classes、split view controller等。这些技术及设备的变化给我在开发的过程中也造成了许多的问题，不仅如此苹果通过不断推出新的技术，努力在帮助我们使用同一套代码开发适应多个设备的Universal的App。另一方面Universal App虽然在开发的过程中，方便了我们开发人员，可是对于用户来说就不那么友好了，由于需要适配多种设备，所以里包含所有设备的代码，但真正的在运行的时候，我们并不需要那么多相关的代码及资源。    &lt;/p&gt;
&lt;p&gt;例如下面的一张图，是一个App运行在iPhone 6+上，使用的各个资源相关的情况：&lt;br&gt;&lt;img src=&quot;/images/2016.01.04.01.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;上图中对勾标出来的是在iPhone 6+上真实运行的时候使用到的相关的资源及代码，对比有对勾的部分，更多的是没有被对勾标出来的部分。可以想象我们下载了一个App（前提这个App是Universal的），然后至少一半的代码及资源是我们不需要的，白白占用着我们的空间。这样对用户体验也不好。为了解决这个问题苹果在iOS 9给出了新的解决方案：&lt;/p&gt;
    
    </summary>
    
      <category term="iOS 9 by Tutoials" scheme="http://mengxiangyue.com/categories/iOS-9-by-Tutoials/"/>
    
    
      <category term="iOS 9" scheme="http://mengxiangyue.com/tags/iOS-9/"/>
    
  </entry>
  
  <entry>
    <title>iOS9 by Tutorials 学习笔记三：Your App on the Web</title>
    <link href="http://mengxiangyue.com/2015/12/27/iOS9-by-Tutorials-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89%EF%BC%9AYour-App-on-the-Web/"/>
    <id>http://mengxiangyue.com/2015/12/27/iOS9-by-Tutorials-学习笔记三：Your-App-on-the-Web/</id>
    <published>2015-12-27T10:22:56.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;这里首先说明一下：这篇文章由于一些限制，我也没有能够进行实验测试，只是尽可能的解释书中的一些知识，可能会有错误，等以后有条件了，我会实验这篇文章中的内容。但是作为了解内容还是不错的。   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在iOS 9之前在iPhone上native和web之间，基本上算是独立的的两部分内容。但是Apple正在努力缩小两者之间的距离，使其越来越近。在iOS 9退出了universal links和web markup，使你能够提供deep links直接进入你的app和在Spotlight和Safari中能够搜索出来你的内容。  &lt;/p&gt;
&lt;h3 id=&quot;Getting-started&quot;&gt;&lt;a href=&quot;#Getting-started&quot; class=&quot;headerlink&quot; title=&quot;Getting started&quot;&gt;&lt;/a&gt;Getting started&lt;/h3&gt;&lt;p&gt;这一章书中提供了两个工程，一个是APP端的，一个是Server端的，因为这个需要Server端修改一些东西。APP可以通过地址：&lt;a href=&quot;https://itunes.apple.com/us/app/rwdevcon-tutorial-conference/id958625272?mt=8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://itunes.apple.com/us/app/rwdevcon-tutorial-conference/id958625272?mt=8&lt;/a&gt;进行下载。APP截图如下：&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.07.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;h3 id=&quot;Linking-to-your-app&quot;&gt;&lt;a href=&quot;#Linking-to-your-app&quot; class=&quot;headerlink&quot; title=&quot;Linking to your app&quot;&gt;&lt;/a&gt;Linking to your app&lt;/h3&gt;&lt;p&gt;在真正开始前，先回顾一下universal link的前辈：deep links。通过这个回顾，了解一下deep links存在的一些问题。   &lt;/p&gt;
&lt;h4 id=&quot;Deep-links&quot;&gt;&lt;a href=&quot;#Deep-links&quot; class=&quot;headerlink&quot; title=&quot;Deep links&quot;&gt;&lt;/a&gt;Deep links&lt;/h4&gt;&lt;p&gt;在iOS 9之前我们可以给APP设置URL scheme，在Info.plist里面添加CFBundleURLTypes key。一般格式类似&lt;your app=&quot;&quot;&gt;://。 另外应该也看到过Apple自己的URL scheme，类似tel://、sms://等。   &lt;/your&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一旦设置了URL scheme，就能够通过openURL(_:)方法调用起来该APP，调用的时候后面可以带着一些参数。然后在我们自己的程序里面可以再AppDelegate的application(_:handleOpenURL:)中进行对应的处理。这套系统已经存在很久了，但是现在暴露出来一些问题：   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安全 UIApplication有一个方法canOpenURL(_:),可以用来检测用户是否能够打开某个URL secheme，本来苹果的设计是好的，但是不幸的是现在好多开发商使用这个来检测用户手机安排了什么APP，这样就收集了用户的APP列表，涉及到了用户的隐私。   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;canOpenURL(_:)这个方法在iOS9中有了限制，如果想使用这个方法必须首先把所有的地址添加到info.plist中，不能按照原来由服务器下发来检测APP安装了。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;冲突 由于URL scheme是每个APP开发商自己定义的，很有可能两个APP开发商定义相同，这时候如果使用openURL(_:)，iPhone将不会知道应该怎么处理。   &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;No fallback：如果 iOS 试图打开没有注册的 URL scheme，会静默失败，然后用户并不知道发生了什么。   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;iOS使用universal links来解决这些问题。使用universal links来代替URL scheme。universal links使用标准的HTTP和HTTPS链接。  &lt;/p&gt;
&lt;h4 id=&quot;Universal-links&quot;&gt;&lt;a href=&quot;#Universal-links&quot; class=&quot;headerlink&quot; title=&quot;Universal links&quot;&gt;&lt;/a&gt;Universal links&lt;/h4&gt;&lt;p&gt;这里举了一个例子：你有一个域名clownapp.com，你可以注册&lt;a href=&quot;http://clownapp.com作为你的universal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://clownapp.com作为你的universal&lt;/a&gt; link。如果用户安装了你的clownapp。当他在Safari或者web view中点击链接&lt;a href=&quot;http://clownapp.com/clowns/fizbo的时候，将会直接进入到你的APP的fizbo的profile页面。如果你没有安装这个将会直接跳转到你的网站上的fizbo的profile页面。如果你使用openURL(\_:)打开，也会与这个动作一样。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://clownapp.com/clowns/fizbo的时候，将会直接进入到你的APP的fizbo的profile页面。如果你没有安装这个将会直接跳转到你的网站上的fizbo的profile页面。如果你使用openURL(\_:)打开，也会与这个动作一样。&lt;/a&gt;   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 这里我运行书中的例子，在模拟器的Safari中打不开。可能是我的原因   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Universal links与deep links有如下的有点：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;唯一 由于使用的是域名，能够保证唯一性&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安全 将你的app与你的域名绑定，上传一个安全签名到你的网站服务器。同样其他的APP也不会轻易的知道手机上是否安装了你的APP。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里原文如下There’s also no way for other apps to tell whether your app is installed.这里不是没有方式，只是说没有原来那么容易。使用URL scheme白名单的方式还是能够检测。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简单 由于跳转到APP和服务器的链接统一了，所以不用考虑在APP和手机上需要使用两套不同的链接了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;注册你的App，使其能够处理universal-links&quot;&gt;&lt;a href=&quot;#注册你的App，使其能够处理universal-links&quot; class=&quot;headerlink&quot; title=&quot;注册你的App，使其能够处理universal links&quot;&gt;&lt;/a&gt;注册你的App，使其能够处理universal links&lt;/h4&gt;&lt;p&gt;为了使App能够处理对应的链接，首先需要让App知道应该处理什么链接。这里使用的链接是rwdecon.com。按照下图添加对应的链接：&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.08.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里可能会出现选择账户，这时候就选择你对应的就好了，如果没有账户可以进入到Account添加。   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;注册你的服务器能够处理unilateral-links&quot;&gt;&lt;a href=&quot;#注册你的服务器能够处理unilateral-links&quot; class=&quot;headerlink&quot; title=&quot;注册你的服务器能够处理unilateral links&quot;&gt;&lt;/a&gt;注册你的服务器能够处理unilateral links&lt;/h4&gt;&lt;p&gt;你需要在服务器的根目录下面，添加文件名为apple-app-site-association(没有后缀)的一个文件，然后在里面添加上如下的内容：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;applinks&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;apps&quot;&lt;/span&gt;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;details&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;appID&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;KFCNEC27GU.com.razeware.RWDevCon&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;paths&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;/videos/\*&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;其中的appId是由team ID和bundle ID拼成的。Paths 数组包含了一个你的App应该处理的 URLs 白名单，这个 paths 数组还支持 基本的模式匹配，例如 *，？ 等，如 /videos/*/year/201?/videoName。   &lt;/p&gt;
&lt;p&gt;这个文件需要上传到服务器的根目录，并且能够通过HTTPS访问到，并且没有重定向。&lt;/p&gt;
&lt;h4 id=&quot;在你的App上处理universal-links&quot;&gt;&lt;a href=&quot;#在你的App上处理universal-links&quot; class=&quot;headerlink&quot; title=&quot;在你的App上处理universal links&quot;&gt;&lt;/a&gt;在你的App上处理universal links&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这部分代码没有试验    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面已经添加对应的universal links，下面需要在App中处理对应的链接了。这里需要解析对应的链接，然后做一些相关的业务逻辑。在Session.swift添加下面的方法，这个方法主要是用来解析对应的url的：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sessionByWebPath&lt;/span&gt;(&lt;span class=&quot;title&quot;&gt;path&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;context&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;NSManagedObjectContext&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;title&quot;&gt;Session&lt;/span&gt;? &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; fetch = &lt;span class=&quot;type&quot;&gt;NSFetchRequest&lt;/span&gt;(entityName: &lt;span class=&quot;string&quot;&gt;&quot;Session&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch.predicate = &lt;span class=&quot;type&quot;&gt;NSPredicate&lt;/span&gt;(format: &lt;span class=&quot;string&quot;&gt;&quot;webPath = %@&quot;&lt;/span&gt;, [path])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; results = &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; context.executeFetchRequest(fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; results.first &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;Session&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; fetchError &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;NSError&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;fetch error: \(fetchError.localizedDescription)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/p&gt;
&lt;p&gt;在AppDelegate.swift添加如下方法：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppDelegate&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 辅助方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;presentVideoViewController&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(URL: NSURL)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; storyboard = &lt;span class=&quot;type&quot;&gt;UIStoryboard&lt;/span&gt;(name: &lt;span class=&quot;string&quot;&gt;&quot;Main&quot;&lt;/span&gt;, bundle: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; navID = &lt;span class=&quot;string&quot;&gt;&quot;NavPlayerViewController&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; navVideoPlayerVC =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    storyboard.instantiateViewControllerWithIdentifier(navID)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;! &lt;span class=&quot;type&quot;&gt;UINavigationController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    navVideoPlayerVC.modalPresentationStyle = .&lt;span class=&quot;type&quot;&gt;FormSheet&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; videoPlayerVC = navVideoPlayerVC.topViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;AVPlayerViewController&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        videoPlayerVC.player = &lt;span class=&quot;type&quot;&gt;AVPlayer&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;URL&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;URL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; rootViewController = window?.rootViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rootViewController?.presentViewController(navVideoPlayerVC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          animated: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, completion: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(application: UIApplication,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    continueUserActivity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    userActivity: NSUserActivity,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    restorationHandler: &lt;span class=&quot;params&quot;&gt;([AnyObject]?)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//1 系统用 NSUserActivityTypeBrowsingWeb 表示对应的 universal HTTP links&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; userActivity.activityType ==&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;NSUserActivityTypeBrowsingWeb&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; universalURL = userActivity.webpageURL!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//2 提取出 url 的不同部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; components = &lt;span class=&quot;type&quot;&gt;NSURLComponents&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;URL&lt;/span&gt;: universalURL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            resolvingAgainstBaseURL: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; path = components.path &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; session = &lt;span class=&quot;type&quot;&gt;Session&lt;/span&gt;.sessionByWebPath(path,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                context: coreDataStack.context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;comment&quot;&gt;//3 找到 session，然后播放 video&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; videoURL = &lt;span class=&quot;type&quot;&gt;NSURL&lt;/span&gt;(string: session.videoUrl)!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  presentVideoViewController(videoURL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//4 无法理解就打开网站首页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; app = &lt;span class=&quot;type&quot;&gt;UIApplication&lt;/span&gt;.sharedApplication()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; url = &lt;span class=&quot;type&quot;&gt;NSURL&lt;/span&gt;(string: &lt;span class=&quot;string&quot;&gt;&quot;http://www.rwdevcon.com&quot;&lt;/span&gt;)!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                app.openURL(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;下面有两个链接，可以给自己写一封邮件带上下面的两个链接，第一个是能够正常打开视频播放的，第二个直接打开网站首页。PS：我没有试验成功&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;good link&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http:&lt;span class=&quot;comment&quot;&gt;//www.rwdevcon.com/videos/talk-tammy-coron-possible.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bad link&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http:&lt;span class=&quot;comment&quot;&gt;//www.rwdevcon.com/videos/tim-cook-keynote.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;h3 id=&quot;使用web-markup&quot;&gt;&lt;a href=&quot;#使用web-markup&quot; class=&quot;headerlink&quot; title=&quot;使用web markup&quot;&gt;&lt;/a&gt;使用web markup&lt;/h3&gt;&lt;p&gt;Search 包含三种不同的 API：NSUserActivity，CoreSpotlight，web markup。前两种已经介绍过了，现在来看第三种。&lt;/p&gt;
&lt;p&gt;你可以使用 web markup 在搜索结果中得到你 app 应用里面的内容。如果你有一个网站，内容与 APP 的内容一致，你可以使用基本的 markup、Smart App Banners、native App能够处理universal links来修改你的网站，使其能够更好的被搜索、展示。   &lt;/p&gt;
&lt;p&gt;苹果有自己的爬虫，如果你的网站使用web markup，苹果的爬虫能够收集到对应的信息，然后保存到自己的服务器上，然后其他用户在搜索的时候能够搜索到对应的内容，不管用户是否安装了你的App，这样也能够帮助你获取一部分用户。   &lt;/p&gt;
&lt;h4 id=&quot;使你的网站能够被发现&quot;&gt;&lt;a href=&quot;#使你的网站能够被发现&quot; class=&quot;headerlink&quot; title=&quot;使你的网站能够被发现&quot;&gt;&lt;/a&gt;使你的网站能够被发现&lt;/h4&gt;&lt;p&gt;苹果的爬虫会到处去爬数据，但是不一定能够很快的发现你的网站，这里有个方法能够帮助苹果爬虫发现你的网站。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在iTunes Connect中，在设置&lt;strong&gt;Support URL&lt;/strong&gt;的地方，设置&lt;strong&gt;Marketing URL&lt;/strong&gt;，指向你已经使用markup的网站。&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.09.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;保证你填写的URL能够被苹果的爬虫访问到。&lt;/li&gt;
&lt;li&gt;检查你Robots.txt文件，保证苹果的爬虫能够正常的爬取你的网站。PS:关于Robots.txt自行百度吧。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;添加Smart-App-Banners&quot;&gt;&lt;a href=&quot;#添加Smart-App-Banners&quot; class=&quot;headerlink&quot; title=&quot;添加Smart App Banners&quot;&gt;&lt;/a&gt;添加Smart App Banners&lt;/h4&gt;&lt;p&gt;添加了Smart App Banners后，打开网站的时候会在顶部出现一个banner,对于已经安装App的用户，会显示一个OPEN按钮方便用户打开对应的App，对于未安装App的用户，将会出现一个view按钮，点击将会进入App store下载该App。效果图类似如下：&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.10.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;实现这个效果的方式，在你想要添加banner的网页上添加如下代码：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-itunes-app&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;app-id=958625272, app- argument=http://www.rwdevcon.com/videos/talk-ray-wenderlich-teamwork.html&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这里的name是App在store中的名字，下面的content包含两部分内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;app-id 在store上的app id&lt;/li&gt;
&lt;li&gt;app- argument 包含跳转回 App 的 URL，iOS 9 之前这个参数是自定义的 URL scheme deep link，现在 Apple 推荐使用 HTTP/HTTPS universal links&lt;blockquote&gt;
&lt;p&gt;Smart App Banners 仅仅支持 Safari   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你能使用Applebot支持的开放的mobile links，比如：Twitter Cards和App Links，但是这两种标记我自己也没有试验，所以只是贴出来代码：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Twitter Cards  具体 https://dev.twitter.com/cards/mobile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;twitter:app:name:iphone&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;RWDevCon&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;twitter:app:id:iphone&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;958625272&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;twitter:app:url:iphone&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.rwdevcon.com/ videos/talk-ray-wenderlich-teamwork.html&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// App Links 具体http://applinks.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;twitter:app:name:iphone&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;RWDevCon&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;twitter:app:id:iphone&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;958625272&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;twitter:app:url:iphone&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.rwdevcon.com/ videos/talk-ray-wenderlich-teamwork.html&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;    &lt;/p&gt;
&lt;h4 id=&quot;Semantic-markup-using-Open-Graph&quot;&gt;&lt;a href=&quot;#Semantic-markup-using-Open-Graph&quot; class=&quot;headerlink&quot; title=&quot;Semantic markup using Open Graph&quot;&gt;&lt;/a&gt;Semantic markup using Open Graph&lt;/h4&gt;&lt;p&gt;苹果爬虫爬到你的内容并不保证会显示在 Spotlight 的搜索结果中，因为他还会和其他搜索结果内容进行竞争。   &lt;/p&gt;
&lt;p&gt;Apple 并没有公布具体的评级算法，只是确保你的内容会被考虑。而当用户明显地点击或搜索结果与你的内容高度相关，那么就会优先被 Apple 考虑。&lt;/p&gt;
&lt;p&gt;最后，Apple 建议为 markup 添加一些结构化的数据，来使其更好地以富文本的形式显示在 Spotlight 中。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:image&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.rwdevcon.com/assets/images/  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;videos/talk-ray-wenderlich-teamwork.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:image:secure_url&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://www.rwdevcon.com/  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;assets/images/videos/talk-ray-wenderlich-teamwork.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:image:type&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/jpeg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:image:width&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;640&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:image:height&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;340&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:video&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.rwdevcon.com/videos/Ray-  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Wenderlich-Teamwork.mp4&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:video:secure_url&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://www.rwdevcon.com/  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;videos/Ray-Wenderlich-Teamwork.mp4&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:video:type&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;video/mp4&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:video:width&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1280&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:video:height&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;720&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:description&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Learn how teamwork lets you  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dream bigger, through the story of an indie iPhone developer who almost  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;missed out on the greatest opportunity of his life.&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上面的og后面的属性，我也没有找到出处，有谁清楚麻烦留言说明一下。谢谢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于web markup相关的详细的东西可以看苹果的文档&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/WebContent.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/WebContent.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最后说明一下：这篇文章由于一些资源问题，我没有做什么测试，可能有地方不对，如果哪里错误了，请指出来，谢谢。&lt;/p&gt;
&lt;p&gt;突然感觉这是最没底的一篇文章。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这里首先说明一下：这篇文章由于一些限制，我也没有能够进行实验测试，只是尽可能的解释书中的一些知识，可能会有错误，等以后有条件了，我会实验这篇文章中的内容。但是作为了解内容还是不错的。   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在iOS 9之前在iPhone上native和web之间，基本上算是独立的的两部分内容。但是Apple正在努力缩小两者之间的距离，使其越来越近。在iOS 9退出了universal links和web markup，使你能够提供deep links直接进入你的app和在Spotlight和Safari中能够搜索出来你的内容。  &lt;/p&gt;
&lt;h3 id=&quot;Getting-started&quot;&gt;&lt;a href=&quot;#Getting-started&quot; class=&quot;headerlink&quot; title=&quot;Getting started&quot;&gt;&lt;/a&gt;Getting started&lt;/h3&gt;&lt;p&gt;这一章书中提供了两个工程，一个是APP端的，一个是Server端的，因为这个需要Server端修改一些东西。APP可以通过地址：&lt;a href=&quot;https://itunes.apple.com/us/app/rwdevcon-tutorial-conference/id958625272?mt=8&quot;&gt;https://itunes.apple.com/us/app/rwdevcon-tutorial-conference/id958625272?mt=8&lt;/a&gt;进行下载。APP截图如下：&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.07.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;h3 id=&quot;Linking-to-your-app&quot;&gt;&lt;a href=&quot;#Linking-to-your-app&quot; class=&quot;headerlink&quot; title=&quot;Linking to your app&quot;&gt;&lt;/a&gt;Linking to your app&lt;/h3&gt;&lt;p&gt;在真正开始前，先回顾一下universal link的前辈：deep links。通过这个回顾，了解一下deep links存在的一些问题。   &lt;/p&gt;
&lt;h4 id=&quot;Deep-links&quot;&gt;&lt;a href=&quot;#Deep-links&quot; class=&quot;headerlink&quot; title=&quot;Deep links&quot;&gt;&lt;/a&gt;Deep links&lt;/h4&gt;&lt;p&gt;在iOS 9之前我们可以给APP设置URL scheme，在Info.plist里面添加CFBundleURLTypes key。一般格式类似&lt;your app&gt;://。 另外应该也看到过Apple自己的URL scheme，类似tel://、sms://等。   &lt;/p&gt;
    
    </summary>
    
      <category term="iOS 9 by Tutoials" scheme="http://mengxiangyue.com/categories/iOS-9-by-Tutoials/"/>
    
    
      <category term="iOS 9" scheme="http://mengxiangyue.com/tags/iOS-9/"/>
    
  </entry>
  
  <entry>
    <title>iOS9 by Tutorials 学习笔记二：App Search</title>
    <link href="http://mengxiangyue.com/2015/12/27/iOS9-by-Tutorials-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C%EF%BC%9AApp-Search/"/>
    <id>http://mengxiangyue.com/2015/12/27/iOS9-by-Tutorials-学习笔记二：App-Search/</id>
    <published>2015-12-27T03:52:58.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;本文为自己读书的一个总结，可能与原书有一定出入  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;iOS 9推出了搜索技术，能够让用户在Spotlight中搜索到APP内部的内容。苹果提供了三个APP Search API：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NSUserActivity&lt;/li&gt;
&lt;li&gt;Core Spotlight&lt;/li&gt;
&lt;li&gt;Web markup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面简单的说一下我对于这三个API的理解：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;NSUserActivity:&lt;br&gt;NSUserActivity在iOS8就已经提出来了，只是那时候提出来是用作HandOff。在iOS9中它可以用来搜索App中的内容。我们可以把一些想要在Spotlight中被搜到的东西，放到NSUserActivity中，然后就能在Spotlight中被搜到，但是这个有一点限制，就是只能搜索用户访问过得内容。因为UIViewController的userActivity属性继承自UIResponser，只有在UIViewcontroller访问的时候，才有机会设置userActivity属性。   &lt;/li&gt;
&lt;li&gt;Core Spotlight:&lt;br&gt;这个是在iOS9新推出的技术，能够将APP的内容在Spotlight中被搜索到。这个技术我理解：苹果给开发者提供了一个全局的index数据库，我们能够把我们想要能够在Spotlight中搜索的内容，按照苹果的要求放到数据库中，然后苹果就做了其他的事情，让其能够被搜索到。同样我们也可以删除我们存储到数据库中的内容。    &lt;/li&gt;
&lt;li&gt;Web markup:&lt;br&gt;Web Markup在网页上显示App的内容并编入Spotlight索引，如此一来即便没有安装某个App，苹果的索引器也能在网页上搜索特别的标记（markup），在Safari或Spotlight上显示搜索结果。具体会在下一篇文章中详细介绍。&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Getting-started&quot;&gt;&lt;a href=&quot;#Getting-started&quot; class=&quot;headerlink&quot; title=&quot;Getting started&quot;&gt;&lt;/a&gt;Getting started&lt;/h3&gt;&lt;p&gt;下面开始试验一下相关的技术，这里还是利用书中的star工程。现在这个工程运行后，就两个界面：&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.01.png&quot; alt=&quot;&quot;&gt;    &lt;/p&gt;
&lt;p&gt;下面是这个工程的截图：&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.02.png&quot; alt=&quot;&quot;&gt;    &lt;/p&gt;
&lt;p&gt;下面是图中标注的几个关键类的解释：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;AppDelegate&lt;br&gt;点击搜索结果跳跳转到程序中，会先在这个类里面做一定的处理    &lt;/li&gt;
&lt;li&gt;EmployeeViewController&lt;br&gt;人员的详细界面，这个里面主要设置NSUserActivity    &lt;/li&gt;
&lt;li&gt;EmployeeService&lt;br&gt;这个主要是写CoreSpotlight中index相关的东西    &lt;/li&gt;
&lt;li&gt;EmployeeSearch&lt;br&gt;主要是扩展了Employee类，添加了与搜索相关的属性&lt;br&gt;另外工程中有员工相关的一些操作都封装在了一个EmployeeKit的target，由于跟主target不在一个module，所以在主target中需要import。    &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在Iphone的Setting/Colleagues/Indexing中有如下三个选项：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disabled 不使用Search API，即不能在Spotlight中搜索到APP中的内容&lt;/li&gt;
&lt;li&gt;ViewedRecords 只有打开过的才能够被搜索到  &lt;/li&gt;
&lt;li&gt;AllRecords 所有的员工信息都能够被搜索到   &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;搜索我们已经打开过的内容&quot;&gt;&lt;a href=&quot;#搜索我们已经打开过的内容&quot; class=&quot;headerlink&quot; title=&quot;搜索我们已经打开过的内容&quot;&gt;&lt;/a&gt;搜索我们已经打开过的内容&lt;/h4&gt;&lt;p&gt;使用NSUserActivity实现这个比较简单，只要两个步骤就可以了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建NSUserActivity的一个实例，设置相关的属性&lt;/li&gt;
&lt;li&gt;赋值给UIViewController的userActivity属性   &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面我们在EmployeeSearch中添加如下代码：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有该文件，需要手动创建一个，然后target选择EmployeeKit   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; CoreSpotlight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Employee&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 这个用于区分Activity，会在点击搜索结果进入APP，相关处理的时候用到，同样也可以在CoreSpotlight中使用到，对于添加、删除index数据的时候都会用到&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; domainIdentifier = &lt;span class=&quot;string&quot;&gt;&quot;com.mengxiangyue.colleagues.employee&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 字典 在处理点击的时候，可以根据该字典获取我们想要的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; userActivityUserInfo: [&lt;span class=&quot;type&quot;&gt;NSObject&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;AnyObject&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: objectId]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 给Employee添加userActivity属性，主要是方便我们获取userActivity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; userActivity: &lt;span class=&quot;type&quot;&gt;NSUserActivity&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; activity = &lt;span class=&quot;type&quot;&gt;NSUserActivity&lt;/span&gt;(activityType: &lt;span class=&quot;type&quot;&gt;Employee&lt;/span&gt;.domainIdentifier)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activity.title = name  &lt;span class=&quot;comment&quot;&gt;// 显示的名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activity.userInfo = userActivityUserInfo  &lt;span class=&quot;comment&quot;&gt;// 与该Activity相关的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activity.keywords = [email, department]  &lt;span class=&quot;comment&quot;&gt;// 关键字 表示搜索什么关键字，能够搜索出来该条记录，当然这个只是补充，这里没有添加name，同样也是可以按照name搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; activity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里扩展了Employee，然后添加了几个属性，属性的意义见注释。&lt;br&gt;这时候我们需要重新编译一下EmployeeKit（因为与主target不是同一个target）。   &lt;/p&gt;
&lt;p&gt;下面打开EmployeeViewController.swift，在viewDidLoad()中添加如下代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; activity = employee.userActivity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Setting&lt;/span&gt;.searchIndexingPreference &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;Disabled&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  activity.eligibleForSearch = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;ViewedRecords&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  activity.eligibleForSearch = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// relatedUniqueIdentifier 定义一个id 防止NSUserActivity和Core Spotlight重复索引，这里设置为nil，显示一下会重复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  activity.contentAttributeSet?.relatedUniqueIdentifier = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;AllRecords&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  activity.eligibleForSearch = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;userActivity = activity&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;下面在该类中添加如下的方法，用于在合适的时机更新Activity：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 更新NSUserActivity关联的信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;updateUserActivityState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(activity: NSUserActivity)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activity.addUserInfoEntriesFromDictionary(employee.userActivityUserInfo)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/p&gt;
&lt;p&gt;下面在Iphone的Setting/Colleagues/Indexing中选择ViewedRecords。然后启动APP，在列表中点击Brent Reid进入详细页面，然后使用Command+shift+H，计入Home页面，下拉出现搜索框，然后输入brent出现如下界面：&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.03.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;看到这个搜索结果界面，感觉太难看了，下面我们丰富一下这个搜索结果，苹果提供的搜索结果可以设置如下的内容：&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.04.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;下面我们在EmployeeSearch.swift添加如下属性：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; attributeSet: &lt;span class=&quot;type&quot;&gt;CSSearchableItemAttributeSet&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; attributeSet = &lt;span class=&quot;type&quot;&gt;CSSearchableItemAttributeSet&lt;/span&gt;(itemContentType: kUTTypeContact &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributeSet.title = name  &lt;span class=&quot;comment&quot;&gt;// 不太清楚是干啥的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributeSet.contentDescription = &lt;span class=&quot;string&quot;&gt;&quot;\(department), \(title)\n\(phone)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributeSet.thumbnailData = &lt;span class=&quot;type&quot;&gt;UIImageJPEGRepresentation&lt;/span&gt;(loadPicture(), &lt;span class=&quot;number&quot;&gt;0.9&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributeSet.supportsPhoneCall = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributeSet.phoneNumbers = [phone]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributeSet.emailAddresses = [email]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributeSet.keywords = skills&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributeSet.relatedUniqueIdentifier = objectId  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; attributeSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  
&lt;p&gt;然后将给userActivity添加如下属性：   &lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; userActivity: &lt;span class=&quot;type&quot;&gt;NSUserActivity&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; activity = &lt;span class=&quot;type&quot;&gt;NSUserActivity&lt;/span&gt;(activityType: &lt;span class=&quot;type&quot;&gt;Employee&lt;/span&gt;.domainIdentifier)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  activity.title = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  activity.userInfo = userActivityUserInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  activity.keywords = [email, department]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  activity.contentAttributeSet = attributeSet   &lt;span class=&quot;comment&quot;&gt;// 新添加的这一行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; activity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  
&lt;p&gt;然后运行程序，搜索结果如下：&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.05.png&quot; alt=&quot;&quot;&gt;   &lt;/p&gt;
&lt;p&gt;但是现在我们注意到，我们点击搜索结果，打开APP并没有按照我们预想的跳转到该员工的详细界面。这个因为我们在程序中没有做对应的处理，下面我们在AppDelete中添加如下的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(application: UIApplication, continueUserActivity userActivity: NSUserActivity, restorationHandler: &lt;span class=&quot;params&quot;&gt;([AnyObject]?)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; objectId: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 先判断了一个type是不是我们自己定义的 然后获取到对应的EmployeeId&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; userActivity.activityType == &lt;span class=&quot;type&quot;&gt;Employee&lt;/span&gt;.domainIdentifier, &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; activityObjectId = userActivity.userInfo?[&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    objectId = activityObjectId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 获取对应Employee实例 然后跳转到对应的界面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; nav = window?.rootViewController &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;UINavigationController&lt;/span&gt;, listVC = nav.viewControllers.first &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;EmployeeListViewController&lt;/span&gt;, employee = &lt;span class=&quot;type&quot;&gt;EmployeeService&lt;/span&gt;().employeeWithObjectId(objectId) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nav.popToRootViewControllerAnimated(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; employeeViewController = listVC.storyboard?.instantiateViewControllerWithIdentifier(&lt;span class=&quot;string&quot;&gt;&quot;EmployeeView&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;! &lt;span class=&quot;type&quot;&gt;EmployeeViewController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    employeeViewController.employee = employee&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nav.pushViewController(employeeViewController, animated: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;   &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这时候我们再点击搜索结果就能够跳转到对应的详细界面了。&lt;/p&gt;
&lt;h3 id=&quot;CoreSpotlight&quot;&gt;&lt;a href=&quot;#CoreSpotlight&quot; class=&quot;headerlink&quot; title=&quot;CoreSpotlight&quot;&gt;&lt;/a&gt;CoreSpotlight&lt;/h3&gt;&lt;p&gt;下面我们开始使用CoreSpotlight添加这些搜索内容。首先在EmployeeSearch.swift的attributeSet中设置如下属性：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 在前面的代码中已经设置过了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;attributeSet.relatedUniqueIdentifier = objectId&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个属性主要是将NSUserActivity与Core Spotlight indexed object进行一个关联，防止出现重复的内容（如果出现重复内容，是因为开始的时候测试NSUserActivity的时候没有设置id，还原一下模拟器就好了）   &lt;/p&gt;
&lt;p&gt;然后在EmployeeSearch.swift添加如下的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// CoreSpotlight需要将一个个item放入其索引数据库中，这里创建一个方便使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; searchableItem: &lt;span class=&quot;type&quot;&gt;CSSearchableItem&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; item = &lt;span class=&quot;type&quot;&gt;CSSearchableItem&lt;/span&gt;(uniqueIdentifier: objectId, domainIdentifier: &lt;span class=&quot;type&quot;&gt;Employee&lt;/span&gt;.domainIdentifier, attributeSet: attributeSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   
&lt;p&gt;然后在EmployeeService.swift添加如下代码：  &lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; CoreSpotlight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;..............&amp;lt;省略一部分代码&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;indexAllEmployees&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; employees = fetchEmployees()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; searchableItems = employees.&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;#123; $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.searchableItem &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 将我们需要被索引的item放入到defaultSearchableIndex中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;CSSearchableIndex&lt;/span&gt;.defaultSearchableIndex().indexSearchableItems(searchableItems) &amp;#123; (error) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; error = error &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Error indexing employees: \(error)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Employees indexed.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   
&lt;p&gt;然后在设置中选择AllRecords，这时候启动APP，然后搜索，看到的搜索结果如下：&lt;br&gt;&lt;img src=&quot;/images/2015.12.27.06.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;但是这时候我们点击搜索结果没有反应，想想应该也能猜到，我们需要在AppDelete中添加代码，最终代码如下：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(application: UIApplication, continueUserActivity userActivity: NSUserActivity, restorationHandler: &lt;span class=&quot;params&quot;&gt;([AnyObject]?)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; objectId: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; userActivity.activityType == &lt;span class=&quot;type&quot;&gt;Employee&lt;/span&gt;.domainIdentifier, &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; activityObjectId = userActivity.userInfo?[&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      objectId = activityObjectId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 这部分else是新添加的 使用不一样的type区分NSUserActivity和CoreSpotlight,然后获取对应的objectId，其他的处理都一样了   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// CSSearchableItemActivityIdentifier这个是CoreSpotlight提供的一个key值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; userActivity.activityType == &lt;span class=&quot;type&quot;&gt;CSSearchableItemActionType&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; activityObjectId = userActivity.userInfo?[&lt;span class=&quot;type&quot;&gt;CSSearchableItemActivityIdentifier&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      objectId = activityObjectId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; nav = window?.rootViewController &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;UINavigationController&lt;/span&gt;, listVC = nav.viewControllers.first &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;EmployeeListViewController&lt;/span&gt;, employee = &lt;span class=&quot;type&quot;&gt;EmployeeService&lt;/span&gt;().employeeWithObjectId(objectId) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      nav.popToRootViewControllerAnimated(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; employeeViewController = listVC.storyboard?.instantiateViewControllerWithIdentifier(&lt;span class=&quot;string&quot;&gt;&quot;EmployeeView&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;! &lt;span class=&quot;type&quot;&gt;EmployeeViewController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      employeeViewController.employee = employee&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      nav.pushViewController(employeeViewController, animated: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这时候我们点击搜索结果应该就能够跳转进入对应的人员详情了。   &lt;/p&gt;
&lt;h3 id=&quot;删除Item&quot;&gt;&lt;a href=&quot;#删除Item&quot; class=&quot;headerlink&quot; title=&quot;删除Item&quot;&gt;&lt;/a&gt;删除Item&lt;/h3&gt;&lt;p&gt;最后在简单的说下删除已经索引的Item，修改EmployeeService.swift对应的方法如下：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;destroyEmployeeIndexing&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;CSSearchableIndex&lt;/span&gt;.defaultSearchableIndex().deleteAllSearchableItemsWithCompletionHandler &amp;#123; (error) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; error = error &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Error deleting searching employee items: \(error)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Employees indexing deleted.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这个方法会在APP启动并且Indxing设置为Disabled的时候调用。   &lt;/p&gt;
&lt;p&gt;另外对于CoreSpotlight中对于Item的操作方式还有好多种，这里我就不一一写出来了，有兴趣的可以看看我翻译的API注释，当然文章可能有点老了，但是基本思想应该没变。地址:&lt;a href=&quot;http://blog.csdn.net/mengxiangyue/article/details/46575977&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CoreSpotlight.framework注释翻译&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为自己读书的一个总结，可能与原书有一定出入  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;iOS 9推出了搜索技术，能够让用户在Spotlight中搜索到APP内部的内容。苹果提供了三个APP Search API：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NSUserActivity&lt;/li&gt;
&lt;li&gt;Core Spotlight&lt;/li&gt;
&lt;li&gt;Web markup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面简单的说一下我对于这三个API的理解：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;NSUserActivity:&lt;br&gt;NSUserActivity在iOS8就已经提出来了，只是那时候提出来是用作HandOff。在iOS9中它可以用来搜索App中的内容。我们可以把一些想要在Spotlight中被搜到的东西，放到NSUserActivity中，然后就能在Spotlight中被搜到，但是这个有一点限制，就是只能搜索用户访问过得内容。因为UIViewController的userActivity属性继承自UIResponser，只有在UIViewcontroller访问的时候，才有机会设置userActivity属性。   &lt;/li&gt;
&lt;li&gt;Core Spotlight:&lt;br&gt;这个是在iOS9新推出的技术，能够将APP的内容在Spotlight中被搜索到。这个技术我理解：苹果给开发者提供了一个全局的index数据库，我们能够把我们想要能够在Spotlight中搜索的内容，按照苹果的要求放到数据库中，然后苹果就做了其他的事情，让其能够被搜索到。同样我们也可以删除我们存储到数据库中的内容。    &lt;/li&gt;
&lt;li&gt;Web markup:&lt;br&gt;Web Markup在网页上显示App的内容并编入Spotlight索引，如此一来即便没有安装某个App，苹果的索引器也能在网页上搜索特别的标记（markup），在Safari或Spotlight上显示搜索结果。具体会在下一篇文章中详细介绍。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="iOS 9 by Tutoials" scheme="http://mengxiangyue.com/categories/iOS-9-by-Tutoials/"/>
    
    
      <category term="iOS 9" scheme="http://mengxiangyue.com/tags/iOS-9/"/>
    
  </entry>
  
  <entry>
    <title>iOS NavigationBar手势返回的时候跟随</title>
    <link href="http://mengxiangyue.com/2015/12/23/iOS-NavigationBar%E6%89%8B%E5%8A%BF%E8%BF%94%E5%9B%9E%E7%9A%84%E6%97%B6%E5%80%99%E8%B7%9F%E9%9A%8F/"/>
    <id>http://mengxiangyue.com/2015/12/23/iOS-NavigationBar手势返回的时候跟随/</id>
    <published>2015-12-23T15:22:39.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;p&gt;在iOS的开发中有时候会遇到这样的情况，在开发的过程中有两个界面，这两个界面使用UINavigationController串联起来，然后在第一个ViewController中不显示UINavigationBar，在第二个显示UINavigationBar。iOS在手势返回的时候默认情况下iOS的NavigationBar是固定的，然后再去做一些渐变位移等动画，但是如果我们在一个界面有NavigationBar，一个没有这样的动画就会很难看。这时候我们希望第二个界面手势返回的时候，NavigationBar跟着界面一起移动。 实现类似下面的效果:   &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2015.12.23.NavigationBarTest.gif&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;这个效果中有两个ViewController，在第二个Controller手势返回的时候，UINavigationBar是跟随着Controller的。如果只是在第一个界面的时候使用这种效果比较简单，只要在两个Controller中添加如下代码即可：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第一个ViewController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;viewWillAppear&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(animated: Bool)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewWillAppear(animated)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 这里一定要使用这个方法 否则会有问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationController?.setNavigationBarHidden(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, animated: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第二个ViewController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;viewWillAppear&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(animated: Bool)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewWillAppear(animated)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationController?.setNavigationBarHidden(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, animated: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码只能实现第一个UINavigationController第一个ViewController隐藏，第二个显示的时候实现跟随效果。如果想实现所有的界面都有跟随的效果，那需要自定义ViewController的转场动画，网上有人已经实现了这个效果，感兴趣的可以下载看一下，地址：&lt;a href=&quot;https://github.com/esonchen/CCSlideNavigationTransition&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/esonchen/CCSlideNavigationTransition&lt;/a&gt;。   &lt;/p&gt;
&lt;p&gt;这篇文章比较短，只是一个简单的Tip而已。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在iOS的开发中有时候会遇到这样的情况，在开发的过程中有两个界面，这两个界面使用UINavigationController串联起来，然后在第一个ViewController中不显示UINavigationBar，在第二个显示UINavigationBar。iOS在手势返回的时候默认情况下iOS的NavigationBar是固定的，然后再去做一些渐变位移等动画，但是如果我们在一个界面有NavigationBar，一个没有这样的动画就会很难看。这时候我们希望第二个界面手势返回的时候，NavigationBar跟着界面一起移动。 实现类似下面的效果:   &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2015.12.23.NavigationBarTest.gif&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
    
    </summary>
    
      <category term="iOS Tips" scheme="http://mengxiangyue.com/categories/iOS-Tips/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS9 by Tutorials 学习笔记一：Swift 2.0</title>
    <link href="http://mengxiangyue.com/2015/12/22/iOS9-by-Tutorials-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80%EF%BC%9ASwift-2-0/"/>
    <id>http://mengxiangyue.com/2015/12/22/iOS9-by-Tutorials-学习笔记一：Swift-2-0/</id>
    <published>2015-12-22T14:15:07.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;p&gt;Apple在前段时间开源了Swift，在iOS开发领域中又制造了一阵骚动，看了一眼Swift的开发路线图，计划在明年的秋天发布Swift 3.0。Apple现在在Swift上变得也更加的开发，鼓励社区贡献代码，也开始接纳社区的一些反馈了。苹果改变以往的封闭的姿态，表明了它对于Swift语言的重视，同时也说明了Swift语言苹果会加大力度去优化，所以现在对于我们iOS开发人员来说，是时候开始学习iOS了。&lt;br&gt;前段时间也面试了几个人，简历里面好几个都写了精通Swift，但是一问问题好多都答不上来，简历上真的。。。。。更多的人貌似没有开始学Swift，但是最后我都建议他们去学习一下Swift。&lt;br&gt;扯远了，回到正题，这篇文章是我的学习笔记，非本人原创内容，只是在看《iOS 9 by Tutorials》这本书时候的一些笔记，然后加上自己的一些理解而已。    &lt;/p&gt;
&lt;p&gt;Swift 2中加入了几个（作者认为）比较重要的改进，如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新的控制流&lt;/li&gt;
&lt;li&gt;（相对）完善的错误处理模型&lt;/li&gt;
&lt;li&gt;协议扩展&lt;/li&gt;
&lt;li&gt;模式匹配的增强&lt;/li&gt;
&lt;li&gt;API可用性检测&lt;/li&gt;
&lt;li&gt;其他一些。。。。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;控制流&quot;&gt;&lt;a href=&quot;#控制流&quot; class=&quot;headerlink&quot; title=&quot;控制流&quot;&gt;&lt;/a&gt;控制流&lt;/h3&gt;&lt;p&gt;在书中首先作者解释了一下控制流，感觉不错：程序中任何能够影响程序执行到不同的路径的结构或者关键字都可以叫做控制流，原文：any construct or keyword that causes the execution of your program to follow a different path can be considered “control flow”.   &lt;/p&gt;
&lt;h4 id=&quot;repeat…while&quot;&gt;&lt;a href=&quot;#repeat…while&quot; class=&quot;headerlink&quot; title=&quot;repeat…while&quot;&gt;&lt;/a&gt;repeat…while&lt;/h4&gt;&lt;p&gt;repeat…while是重复的意思，类似于其他语言中的do…while。其实在Swift 1.x中还是使用的do…while，在2.x中为了与do…catch区分，所以改成了repeat，但是语义上还是没有变化。这里多说一句，Swift的好多改进，都是为了让程序读上去更加明确，例如Optional、guard等也有这方面的考虑。   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本例子中的代码都是在Playground中实现的    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;repeat&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;x:\(x)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    x += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// Swift计划在3.0中移除 ++ -- 所以还是尽量少用吧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; x &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 这个地方可以添加括号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面while后面可以不适用括号，这个也是Swift的一个改进，Swift中只有必要（即语义不明确）的时候才会要求必须加括号。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;guard&quot;&gt;&lt;a href=&quot;#guard&quot; class=&quot;headerlink&quot; title=&quot;guard&quot;&gt;&lt;/a&gt;guard&lt;/h4&gt;&lt;p&gt;guard这个词我也不知道怎么翻译，这里就不翻译了。但是这个关键字的作用的就是一个先决条件的检测。先看下面的例子：   &lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(name: String)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; !name.isEmpty &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;no name&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printName(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printName(&lt;span class=&quot;string&quot;&gt;&quot;MengXiangYue&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  
&lt;p&gt;上面的例子是一个没有意义的例子，只是为了演示。定义了一个函数打印传入的名字，这个函数的要求如果传入的name为空，就判定程序错误，然后返回不执行代码。&lt;strong&gt;guard&lt;/strong&gt; 后面跟一个条件，条件为真的时候不会执行else，当条件为假的时候将会执行else，这样就能够达到了我们的要求。但是可能又回说，我用一个if-else也能够实现这个功能，但是如果要是跟Optional结合在一起就比if-else方便多了，下面继续看这个例子：  &lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(inName: String?)&lt;/span&gt;&lt;/span&gt; &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 这里变成了可选值了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; name = inName &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;no name&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; !name.isEmpty &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;no name&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printName(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printName(&lt;span class=&quot;string&quot;&gt;&quot;MengXiangYue&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;    
&lt;p&gt;上面的例子中传入的参数是一个可选值，这时候使用『guard let name = _name else…』,这个类似于if let解包的方式，但是看下面我们使用guard声明的name变量，在下面是能够正常使用的，但是考虑如果使用if let这个就不能使用了，所以我认为guard结合Optional是使用起来最方便的。另外这个东西也可以实现类似NSAssert类似的功能，只是这个不会崩溃。&lt;/p&gt;
&lt;h3 id=&quot;（相对）完善的错误处理模型&quot;&gt;&lt;a href=&quot;#（相对）完善的错误处理模型&quot; class=&quot;headerlink&quot; title=&quot;（相对）完善的错误处理模型&quot;&gt;&lt;/a&gt;（相对）完善的错误处理模型&lt;/h3&gt;&lt;p&gt;这里我加了一个相对，主要是指的相对于Swift 1.x，2.x的错误处理好用了不少，但是相比于java等其他部分语言，还是不完善，Swift中的错误处理，对于抛出错误来说，你只是知道该函数抛出了错误，但是不清楚这个函数抛出了什么错误，书中有句话写的很正确，这个要求写程序的时候一定要在文档中写明，会抛出的各种异常（在java中会明确的抛出Exception，Exception与Swift的Error功能一致）。    &lt;/p&gt;
&lt;p&gt;另外相对于Objective-C的NSError把指针传递进去，然后等函数执行完成之后检查，已经先进了不少，鼓掌。。。。。&lt;br&gt;定义下面的一个协议：   &lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; swift&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JSONParsable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(json: [String: AnyObject])&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Self&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  
&lt;p&gt;这个协议定义了一个静态方法，这里不能叫做类方法，以为协议同时可以应用到Struct上，可以叫类型方法。这个函数使用了&lt;strong&gt;throws&lt;/strong&gt; 关键字，这个关键字表示该方法可能会抛出一个错误，这里也看不出来抛出什么错误（你妹啊，啥错误都不知道），所以就更加突出这时候注释的重要性（可以写篇文章：论注释的重要性，哈哈哈）。   &lt;/p&gt;
&lt;p&gt;那既然说到抛出错误，那我们就得定义错误，在Swift中定义错误比较容易，只要定义一个枚举类型，然后遵守&lt;strong&gt;ErrorType&lt;/strong&gt; 协议就可以了。OC中的NSError同样也实现了&lt;strong&gt;ErrorType&lt;/strong&gt; 协议，所以我们能够在OC和Swift中使用NSError没有问题。下面定义一个错误：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ParseError&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;ErrorType&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MissingAttribute&lt;/span&gt;(message: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;定义一个错误比较简单，跟普通的枚举没什么不同，这里定义了一个有关联值的枚举。关联值这里要多扯一句，关联值这个东西在Swift中能够解决好多与类型相关的东西，有时候我们经常会遇到某个类型与值相关，比如我们自己的工程中，网络请求错误需要带着错误码和错误提示，这时候我在OC中可能需要返回三个参数，但是在Swift中我可以只是返回一个枚举，然后关联上另外的两个值。对于多个有关系的值，同样也可以使用元组，曾经看kingfisher的时候，作者把一个类的配置参数都放到一个元组里面，然后解析这个元组，这样参数可能更加清晰。&lt;br&gt;又扯远了，回到正题。下面我们实现一个结构体Person：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;JSONParsable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; firstName: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; lastName: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(json: [String : AnyObject])&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Person&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; firstName = json[&lt;span class=&quot;string&quot;&gt;&quot;first_name&quot;&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; message = &lt;span class=&quot;string&quot;&gt;&quot;Expected first_name String&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ParseError&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;MissingAttribute&lt;/span&gt;(message: message) &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; lastName = json[&lt;span class=&quot;string&quot;&gt;&quot;last_name&quot;&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; message = &lt;span class=&quot;string&quot;&gt;&quot;Expected last_name String&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ParseError&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;MissingAttribute&lt;/span&gt;(message: message) &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Person&lt;/span&gt;(firstName: firstName, lastName: lastName)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  
&lt;p&gt;代码比较简单就不过多解释了，就是在不同情况下抛出不同的异常。我们在调用这个方法的时候，需要处理这些异常，这时候就使用到了Swift中的do…catch。下面是代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; person = &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Person&lt;/span&gt;.parse([&lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ParseError&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;MissingAttribute&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; message) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Unexpected ErrorType&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;    
&lt;p&gt;do后面需要使用{}将抛出异常的函数包起来，调用抛出异常的方法的时候，需要使用try关键字，然后后面跟着需要捕获的异常，如果清楚需要捕获的异常的类型，可以再catch后面加上异常类型，如果没有异常类型，那表示捕获所有的异常。异常会按照catch的顺序挨个匹配，直到找到第一个匹配的结束。   &lt;/p&gt;
&lt;p&gt;如果我们对于异常不关心，我们可以使用try?、try!调用方法，其中try?调用方法会返回一个Optional值，如果调用成功将会返回对应的结果，如果失败则返回nil，程序一定不会崩溃，但是如果我们直接使用try!如果有异常抛出，程序将会崩溃。所以只有在保证我们调用的函数不会抛出异常的时候才能使用try!。  &lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;Person&lt;/span&gt;.parse([&lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;])  &lt;span class=&quot;comment&quot;&gt;// nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; p2 = &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;! &lt;span class=&quot;type&quot;&gt;Person&lt;/span&gt;.parse([&lt;span class=&quot;string&quot;&gt;&quot;first_name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Ray&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;last_name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Wenderlich&quot;&lt;/span&gt;]) &lt;span class=&quot;comment&quot;&gt;// Person&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; p3 = &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;! &lt;span class=&quot;type&quot;&gt;Person&lt;/span&gt;.parse([&lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;]) &lt;span class=&quot;comment&quot;&gt;// error crash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;协议扩展&quot;&gt;&lt;a href=&quot;#协议扩展&quot; class=&quot;headerlink&quot; title=&quot;协议扩展&quot;&gt;&lt;/a&gt;协议扩展&lt;/h3&gt;&lt;p&gt;在这一部分使用一个例子来介绍协议扩展，协议扩展是在Swift 2.x中一个比较重要的思想。详细的可以看看WWDC 2015 Session 408了解。下面定义一个验证字符串规则的一个协议：  &lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StringValidationRule&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string: String)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 验证是否合法的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; errorType: &lt;span class=&quot;type&quot;&gt;StringValidationError&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;  &lt;span class=&quot;comment&quot;&gt;// error的类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  
&lt;p&gt;上面定义了校验规则的协议，下面定义一个校验器协议：  &lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StringValidator&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; validationRules: [&lt;span class=&quot;type&quot;&gt;StringValidationRule&lt;/span&gt;] &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; (valid: &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt;, errors: [&lt;span class=&quot;type&quot;&gt;StringValidationError&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   
&lt;p&gt;StringValidator这个校验器，有一个保存校验规则的数组，然后有一个校验方法，返回一个元祖，包含最终的校验结果，及错误。这里我们考虑一下对于校验器可能我们处理的逻辑都是一样的，就是循环所有的校验规则，然后查看是否校验成功。这个逻辑算是比较一致，如果我们把这个放到每个实现该协议的类型里面，那代码可能会重复。这时候我们可以提供一个默认的实现，这就是协议扩展（类似于虚函数的功能）。   &lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StringValidator&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; (valid: &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt;, errors:[&lt;span class=&quot;type&quot;&gt;StringValidationError&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; errors = [&lt;span class=&quot;type&quot;&gt;StringValidationError&lt;/span&gt;]()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; rule &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; validationRules &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; rule.validate(string)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; error &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;StringValidationError&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                errors.append(error)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; error &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;fatalError&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Unexpected error type: \(error)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (valid: errors.isEmpty, errors: errors)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面我们实现一个字符串以某些字符开始和以某些字符结束的的规则。首先定义一下上面的StringValidationError&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 错误类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StringValidationError&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;ErrorType&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MustStartWith&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;NSCharacterSet&lt;/span&gt;, description: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MustEndWith&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;NSCharacterSet&lt;/span&gt;, description: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; description: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; errorString: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;MustStartWith&lt;/span&gt;(\&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; description):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        errorString = &lt;span class=&quot;string&quot;&gt;&quot;Must start with \(description).&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;MustEndWith&lt;/span&gt;(\&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; description):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        errorString = &lt;span class=&quot;string&quot;&gt;&quot;Must end with \(description).&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; errorString&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 扩展String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;String&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;startsWithCharacterFromSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;: NSCharacterSet)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; !isEmpty &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rangeOfCharacterFromSet(&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;, options: [], range: startIndex..&amp;lt;startIndex.successor()) != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;endsWithCharacterFromSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;: NSCharacterSet)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; !isEmpty &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rangeOfCharacterFromSet(&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;, options: [], range: endIndex.predecessor()..&amp;lt;endIndex) != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StartsWithCharacterStringValidationRule&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;StringValidationRule&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; characterSet: &lt;span class=&quot;type&quot;&gt;NSCharacterSet&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; description: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; errorType: &lt;span class=&quot;type&quot;&gt;StringValidationError&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;MustStartWith&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;: characterSet, description: description)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string: String)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; string.startsWithCharacterFromSet(characterSet) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; errorType &lt;span class=&quot;comment&quot;&gt;// 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;EndsWithCharacterStringValidationRule&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;StringValidationRule&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; characterSet: &lt;span class=&quot;type&quot;&gt;NSCharacterSet&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; description: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; errorType: &lt;span class=&quot;type&quot;&gt;StringValidationError&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;MustEndWith&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;: characterSet, description: description)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string: String)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; string.endsWithCharacterFromSet(characterSet) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; errorType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;两个验证规则创建好了，下面我们创建一个校验器：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这个校验器实现了StringValidator，但是由于StringValidator存在扩展，所以可以不用实现该协议中的func validate(string: String) -&amp;gt; (valid: Bool, errors:[StringValidationError])方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StartsAndEndsWithStringValidator&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;StringValidator&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; startsWithSet: &lt;span class=&quot;type&quot;&gt;NSCharacterSet&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; startsWithDescription: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; endsWithSet: &lt;span class=&quot;type&quot;&gt;NSCharacterSet&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; endsWithDescription: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; validationRules: [&lt;span class=&quot;type&quot;&gt;StringValidationRule&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;StartsWithCharacterStringValidationRule&lt;/span&gt;(characterSet: startsWithSet, description: startsWithDescription),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;EndsWithCharacterStringValidationRule&lt;/span&gt;(characterSet: endsWithSet, description: endsWithDescription)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 下面使用一下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;et numberSet = &lt;span class=&quot;type&quot;&gt;NSCharacterSet&lt;/span&gt;.decimalDigitCharacterSet()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; startsAndEndsWithValidator = &lt;span class=&quot;type&quot;&gt;StartsAndEndsWithStringValidator&lt;/span&gt;(startsWithSet: letterSet, startsWithDescription: &lt;span class=&quot;string&quot;&gt;&quot;letter&quot;&lt;/span&gt;, endsWithSet: numberSet, endsWithDescription: &lt;span class=&quot;string&quot;&gt;&quot;number&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;startsAndEndsWithValidator.validate(&lt;span class=&quot;string&quot;&gt;&quot;1foo&quot;&lt;/span&gt;).errors.description&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   &lt;/p&gt;
&lt;p&gt;上面的内容是一个简单的例子，我将书中的例子做了一些简化。   &lt;/p&gt;
&lt;p&gt;下面我们再看一个例子，在扩展协议的时候我们可以结合where关键字，使符合where条件的类型，才会自动的存在默认的协议扩展。&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 扩展了MutableCollectionType协议，这个协议仅对Index为Int类型的实现了MutableCollectionType的类型生效  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Index是定义在MutableCollectionType的父协议MutableIndexable中的关联类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MutableCollectionType&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Index&lt;/span&gt; == &lt;span class=&quot;title&quot;&gt;Int&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 该方法任意的交换集合元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;mutating&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;shuffleInPlace&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;(&lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; j = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;type&quot;&gt;UInt32&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt; - i))) + i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; i != j &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;swap&lt;/span&gt;(&amp;amp;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;[i], &amp;amp;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; people = [&lt;span class=&quot;string&quot;&gt;&quot;Chris&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Ray&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Sam&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Jake&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Charlie&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;people.shuffleInPlace()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;模式匹配的增强&quot;&gt;&lt;a href=&quot;#模式匹配的增强&quot; class=&quot;headerlink&quot; title=&quot;模式匹配的增强&quot;&gt;&lt;/a&gt;模式匹配的增强&lt;/h3&gt;&lt;p&gt;在Swift中可以不仅可以再实现协议扩展的时候使用，还可以在for循环，也可以在if-let、switch、if-case的使用，如下例子：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; names = [&lt;span class=&quot;string&quot;&gt;&quot;Charlie&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Chris&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Mic&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;John&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Craig&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Felipe&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; namesThatStartWithC = [&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;]()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 将以&quot;C&quot;开头的名字，加入到数组namesThatStartWithC中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; cName &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; names &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; cName.hasPrefix(&lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  namesThatStartWithC.append(cName)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义一个Author&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Author&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; name: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; status: &lt;span class=&quot;type&quot;&gt;Additional_Things_PageSources&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;AuthorStatus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(name: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;, status: &lt;span class=&quot;type&quot;&gt;Additional_Things_PageSources&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;AuthorStatus&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; authors = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Author&lt;/span&gt;(name: &lt;span class=&quot;string&quot;&gt;&quot;Chris Wagner&quot;&lt;/span&gt;, status: .&lt;span class=&quot;type&quot;&gt;Late&lt;/span&gt;(daysLate: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Author&lt;/span&gt;(name: &lt;span class=&quot;string&quot;&gt;&quot;Charlie Fulton&quot;&lt;/span&gt;, status: .&lt;span class=&quot;type&quot;&gt;Late&lt;/span&gt;(daysLate: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Author&lt;/span&gt;(name: &lt;span class=&quot;string&quot;&gt;&quot;Evan Dekhayser&quot;&lt;/span&gt;, status: .&lt;span class=&quot;type&quot;&gt;OnTime&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; slapLog = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; author &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; authors &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; .&lt;span class=&quot;type&quot;&gt;Late&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; daysLate) = author.status &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; daysLate &amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slapLog += &lt;span class=&quot;string&quot;&gt;&quot;Ray slaps \(author.name) around a bit with a large trout \n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;API可用性检测&quot;&gt;&lt;a href=&quot;#API可用性检测&quot; class=&quot;headerlink&quot; title=&quot;API可用性检测&quot;&gt;&lt;/a&gt;API可用性检测&lt;/h3&gt;&lt;p&gt;在Swift 2.x中检测某个API是否可用，不用像原来一样判断是否能够响应某个API，直接使用如下代码，使其在该版本系统下生效即可：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; #available(iOS &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;, \*) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 调用在iOS 9下才能使用的API&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;defer关键字&quot;&gt;&lt;a href=&quot;#defer关键字&quot; class=&quot;headerlink&quot; title=&quot;defer关键字&quot;&gt;&lt;/a&gt;defer关键字&lt;/h3&gt;&lt;p&gt;defer在Swift中表示，在方法结束的时候一定会调用的代码。在程序中我们经常将一些内存回收、状态回复等动作放在代码的最后，但是如果在前面代码执行的过程中，发生了异常，那么可能后面的代码就不能执行，造成程序错误。但是使用defer关键字，能够保证不管程序是否正常结束，该代码一定会被执行。   &lt;/p&gt;
&lt;p&gt;例如在使用ATM的时候，不管使用的过程中发生了什么异常都必须保证最后必须把银行卡退给用户，这个在这里使用defer关键字就比较合适。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ATM&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;mutating&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dispenseFunds&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(amount: Float, &lt;span class=&quot;keyword&quot;&gt;inout&lt;/span&gt; account: Account)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; &amp;#123;  &lt;span class=&quot;comment&quot;&gt;// 保证一定能够退卡成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     log += &lt;span class=&quot;string&quot;&gt;&quot;Card for \(account.name) has been returned to customer.\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ejectCard()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;// 其他的逻辑处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ejectCard&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// physically eject card&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;   
&lt;p&gt;终于是把这篇文章算是写完了，后面的一部分都是一些小的知识点，慢慢积累吧，自己的读书笔记，希望对别人有帮助吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Apple在前段时间开源了Swift，在iOS开发领域中又制造了一阵骚动，看了一眼Swift的开发路线图，计划在明年的秋天发布Swift 3.0。Apple现在在Swift上变得也更加的开发，鼓励社区贡献代码，也开始接纳社区的一些反馈了。苹果改变以往的封闭的姿态，表明了它对于Swift语言的重视，同时也说明了Swift语言苹果会加大力度去优化，所以现在对于我们iOS开发人员来说，是时候开始学习iOS了。&lt;br&gt;前段时间也面试了几个人，简历里面好几个都写了精通Swift，但是一问问题好多都答不上来，简历上真的。。。。。更多的人貌似没有开始学Swift，但是最后我都建议他们去学习一下Swift。&lt;br&gt;扯远了，回到正题，这篇文章是我的学习笔记，非本人原创内容，只是在看《iOS 9 by Tutorials》这本书时候的一些笔记，然后加上自己的一些理解而已。    &lt;/p&gt;
&lt;p&gt;Swift 2中加入了几个（作者认为）比较重要的改进，如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新的控制流&lt;/li&gt;
&lt;li&gt;（相对）完善的错误处理模型&lt;/li&gt;
&lt;li&gt;协议扩展&lt;/li&gt;
&lt;li&gt;模式匹配的增强&lt;/li&gt;
&lt;li&gt;API可用性检测&lt;/li&gt;
&lt;li&gt;其他一些。。。。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;控制流&quot;&gt;&lt;a href=&quot;#控制流&quot; class=&quot;headerlink&quot; title=&quot;控制流&quot;&gt;&lt;/a&gt;控制流&lt;/h3&gt;&lt;p&gt;在书中首先作者解释了一下控制流，感觉不错：程序中任何能够影响程序执行到不同的路径的结构或者关键字都可以叫做控制流，原文：any construct or keyword that causes the execution of your program to follow a different path can be considered “control flow”.   &lt;/p&gt;
&lt;h4 id=&quot;repeat…while&quot;&gt;&lt;a href=&quot;#repeat…while&quot; class=&quot;headerlink&quot; title=&quot;repeat…while&quot;&gt;&lt;/a&gt;repeat…while&lt;/h4&gt;&lt;p&gt;repeat…while是重复的意思，类似于其他语言中的do…while。其实在Swift 1.x中还是使用的do…while，在2.x中为了与do…catch区分，所以改成了repeat，但是语义上还是没有变化。这里多说一句，Swift的好多改进，都是为了让程序读上去更加明确，例如Optional、guard等也有这方面的考虑。   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本例子中的代码都是在Playground中实现的    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;repeat&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;x:\(x)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    x += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// Swift计划在3.0中移除 ++ -- 所以还是尽量少用吧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; x &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 这个地方可以添加括号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面while后面可以不适用括号，这个也是Swift的一个改进，Swift中只有必要（即语义不明确）的时候才会要求必须加括号。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS 9 by Tutoials" scheme="http://mengxiangyue.com/categories/iOS-9-by-Tutoials/"/>
    
    
      <category term="iOS 9" scheme="http://mengxiangyue.com/tags/iOS-9/"/>
    
  </entry>
  
  <entry>
    <title>Hexo结合Github Pages搭建静态博客</title>
    <link href="http://mengxiangyue.com/2015/12/19/Hexo%E7%BB%93%E5%90%88Github-Pages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <id>http://mengxiangyue.com/2015/12/19/Hexo结合Github-Pages搭建静态博客/</id>
    <published>2015-12-19T05:17:00.000Z</published>
    <updated>2016-04-25T10:54:34.000Z</updated>
    
    <content type="html">&lt;p&gt;已经好久没有写过博客了，主要是因为懒了。&lt;br&gt;前几天无聊点进了阿里云的广告里面，无意中看到了域名查询，查了一下自己的名字的域名，发现还没有注册（我原来记的这个域名是已经注册的了），然后就花钱买下了这个域名。然后因为这个买到的域名引出了了后面搭建博客的这么一堆事。  &lt;/p&gt;
&lt;p&gt;我自己已经有一个博客了，是在CSDN的博客，博客地址：&lt;a href=&quot;http://blog.csdn.net/mengxiangyue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/mengxiangyue&lt;/a&gt;,那个博客维护了好久了，从大三开始吧。断断续续也写了好多年了，里面的文章我个人感觉水平也就一般。但是因为这些水平一般的文章，我也收获了很多，首先是收获了一个笔记吧，然后是申请成功了CSDN的博客（伪）专家，因为这个专家的身份，有时候会参加一些CSDN举办的活动。说到写博客，我个人感觉最重要的是技术的积累，我也跟很多人说过写博客这个事情，但是貌似听的人不是特别多。  &lt;/p&gt;
&lt;p&gt;好了貌似扯得有点远了，下面进入正题。&lt;br&gt;上面我已经说过我买了一个域名，那就大概梳理一下提纲吧：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;购买一个域名&lt;/li&gt;
&lt;li&gt;在github上面生成一个github pages的仓库&lt;/li&gt;
&lt;li&gt;搭建Hexo环境&lt;/li&gt;
&lt;li&gt;配置博客&lt;/li&gt;
&lt;li&gt;部署博客&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在开始介绍步骤之前，先扯几句Hexo、Github Pages的东西（我也不是完全了解，只是我的理解，如果哪里错了，还请指出）  Github Pages是Github提供的一个静态网站的功能，可以根据在Github仓库的HTML、CSS、js文件生成一个网站，然后提供一个二级域名，可以直接访问。这里说的静态网站，就是所有的页面的HTML页面都是静态的、已经生成好的，而不是动态生成的。&lt;br&gt;Github Pages使用的是已经生成好的HTML，如果我们自己手动写HTML会累死的，所以就需要使用工具来生成。搭配Github Pages的比较不错的工具有jekyll、Hexo等，查了一下资料说jekyll比较复杂，Hexo比较简单，最后选择了后者。&lt;/p&gt;
&lt;p&gt;下面按步骤说吧：&lt;/p&gt;
&lt;h3 id=&quot;1-购买一个域名&quot;&gt;&lt;a href=&quot;#1-购买一个域名&quot; class=&quot;headerlink&quot; title=&quot;1. 购买一个域名&quot;&gt;&lt;/a&gt;1. 购买一个域名&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;这里如果你不想使用独立域名，也可以略过这一步    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注册、登录阿里云账号，然后选择-&amp;gt;域名与网站服务，查询自己想要的域名，加入清单，结算这样就买了一个域名。这里先不配置DNS，后面会说。  &lt;/p&gt;
&lt;h3 id=&quot;2-在github上面生成一个github-pages的仓库&quot;&gt;&lt;a href=&quot;#2-在github上面生成一个github-pages的仓库&quot; class=&quot;headerlink&quot; title=&quot;2. 在github上面生成一个github pages的仓库&quot;&gt;&lt;/a&gt;2. 在github上面生成一个github pages的仓库&lt;/h3&gt;&lt;p&gt;2.1 在github上创建一个仓库,名字你自己随便起就可以了。如图： &lt;img src=&quot;/images/2015.12.19.01.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;2.2 创建完了后，选择该仓库的Settings，然后找到Github Pages部分。&lt;img src=&quot;/images/2015.12.19.02.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;点击了之后会进入选择主题，这时候随便选择，然后点击发布就可以了。做完了这些之后，我们可以访问以下http://&amp;lt;你的Github用户名&amp;gt;.github.com，这时候如果能够打开说明成功了。   &lt;/p&gt;
&lt;h3 id=&quot;3-搭建Hexo环境&quot;&gt;&lt;a href=&quot;#3-搭建Hexo环境&quot; class=&quot;headerlink&quot; title=&quot;3. 搭建Hexo环境&quot;&gt;&lt;/a&gt;3. 搭建Hexo环境&lt;/h3&gt;&lt;p&gt;3.1 安装npm、nodejs环境，这个自己百度吧，我就不写了。&lt;br&gt;3.2 安装Hexo&lt;br&gt;    执行如下命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-cli -g # 安装hexo工具&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.3 初始化博客&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init blog #初始化一个blog 可以cd到你想要生成博客的目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd blog # 切换到创建博客的目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install # 安装nodejs依赖 注册这里一定要在init后面执行一次这个，否则可能会出现一些未知的错误&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时候生成的博客目录：&lt;img src=&quot;/images/2015.12.19.03.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;执行如下命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时候在浏览器访问&lt;a href=&quot;http://0.0.0.0:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://0.0.0.0:4000/&lt;/a&gt;，应该能够看到已经搭建好的博客了。  &lt;/p&gt;
&lt;h3 id=&quot;4-配置博客&quot;&gt;&lt;a href=&quot;#4-配置博客&quot; class=&quot;headerlink&quot; title=&quot;4. 配置博客&quot;&gt;&lt;/a&gt;4. 配置博客&lt;/h3&gt;&lt;p&gt;这里主要配置主题、评论插件多说、RSS、域名。&lt;br&gt;我使用的主题是jacman，详细的介绍在&lt;a href=&quot;http://wuchong.me/jacman/2014/11/20/how-to-use-jacman/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;已经介绍了，我这里只是说了一下我自己配置过程中的一些注意的地方。我的博客的源文件也已经开源了，如果有不明白的地方可以下载看一下，地址&lt;a href=&quot;https://github.com/mengxiangyue/mengxiangyue-blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/mengxiangyue/mengxiangyue-blog&lt;/a&gt;&lt;br&gt;每个配置项的后面留一个空格，然后再写配置的值，如下”首页:”与后面的”/“之间要留一个空格，否则会出现问题。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;首页: /&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果一个配置项目包含多个子项目，子项目起始位置要留空格，如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;imglogo:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  src: img/logo.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;另外在配置的过程中，可能会出现看着配置项目没问题，然后就是出现错误，这时候可以试试换一个工具打开配置文件，然后配置，可能有些工具的编码问题造成的。&lt;br&gt;在配置的过程中涉及到图片的路径都在themes/jacman/source/img目录下面。   &lt;/p&gt;
&lt;h4 id=&quot;配置多说插件&quot;&gt;&lt;a href=&quot;#配置多说插件&quot; class=&quot;headerlink&quot; title=&quot;配置多说插件&quot;&gt;&lt;/a&gt;配置多说插件&lt;/h4&gt;&lt;p&gt;注册多说（&lt;a href=&quot;http://duoshuo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://duoshuo.com/&lt;/a&gt;）账户，然后添加站点，按照自己的要求填写信息。&lt;img src=&quot;/images/2015.12.19.04.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;右上角点击你新建的使用多说的配置站点，然后看浏览器地址栏的地址，如果出现admin结尾，然后记录下来多说前面的用户名，比如我的是&lt;a href=&quot;http://mengxinagyue.duoshuo.com/admin/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mengxinagyue.duoshuo.com/admin/&lt;/a&gt; ，然后我的用户名就是mengxiangyue。找到配置文件在对应的地方改成你自己的用户名&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;duoshuo_shortname: mengxinagyue  #修改成你自己的用户名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到这里多说配置完了。&lt;/p&gt;
&lt;h4 id=&quot;配置RSS&quot;&gt;&lt;a href=&quot;#配置RSS&quot; class=&quot;headerlink&quot; title=&quot;配置RSS&quot;&gt;&lt;/a&gt;配置RSS&lt;/h4&gt;&lt;p&gt;执行如下命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-generator-feed --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在博客的配置文件_config.yml中添加如下配置：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Plugins:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hexo-generator-feed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Feed Atom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;feed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: atom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  path: atom.xml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  limit: 20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行如下命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里先去创建一篇测试文章，因为多说插件只有在文章中才能看到，怎么创建文章，这个去看官方文档吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo generate  # 重新生成配置文件 保证我们的修改会生效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;访问&lt;a href=&quot;http://0.0.0.0:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://0.0.0.0:4000/&lt;/a&gt;，配置应该已经生效&lt;/p&gt;
&lt;h4 id=&quot;配置域名&quot;&gt;&lt;a href=&quot;#配置域名&quot; class=&quot;headerlink&quot; title=&quot;配置域名&quot;&gt;&lt;/a&gt;配置域名&lt;/h4&gt;&lt;p&gt;安装阿里云的帮助文档，进入到域名解析配置页面，然后选择CNAME进行解析（这里的原理我也没有详细了解过），类似下面的配置（图中的域名修改为你自己的），然后保存。&lt;br&gt;&lt;img src=&quot;/images/2015.12.19.04.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;配置完后可能立即访问也没有效果，需要过一会才会生效，这个涉及到DNS的知识，请自己百度吧。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在你的博客的文件夹的source目录下创建一个”CNAME”文件，没有后缀，里面的内容就只是写上你的域名就可以了。&lt;/p&gt;
&lt;h3 id=&quot;5-部署博客&quot;&gt;&lt;a href=&quot;#5-部署博客&quot; class=&quot;headerlink&quot; title=&quot;5. 部署博客&quot;&gt;&lt;/a&gt;5. 部署博客&lt;/h3&gt;&lt;p&gt;在命令行执行如下命令，安装hexo-deployer-git,这个主要适用于将博客部署到Github上的工具。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在博客的配置文件_config.yml中添加如下配置：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repo: &amp;lt;你的博客的仓库地址，即查看仓库时候浏览器地址栏的地址&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后执行如下命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在部署的过程中可能会需要输入用户名密码，如果还是不行可能还需要配置SSH，因为我的电脑原来早就已经配置过了，所以这里不清楚。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后出现部署成功的提示，这时候访问你的博客应该就能看到最新的了。&lt;/p&gt;
&lt;h3 id=&quot;下面是我遇到的一些问题&quot;&gt;&lt;a href=&quot;#下面是我遇到的一些问题&quot; class=&quot;headerlink&quot; title=&quot;下面是我遇到的一些问题&quot;&gt;&lt;/a&gt;下面是我遇到的一些问题&lt;/h3&gt;&lt;p&gt;1 about路径不存在&lt;br&gt; jacman主题上菜单栏里面有一个about菜单项目，它指向的地址是about/目录，我们可以使用如下命令创建该目录，然后修改里面的index.md文件。     &lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new page &amp;quot;about&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2 图片路径的问题&lt;br&gt;我们可以在source目录下创建一个images目录，然后在使用的时候，使用相对路径，例如：’&lt;img src=&quot;/images/2015.12.19.05.png&quot; alt=&quot;&quot;&gt;‘  &lt;/p&gt;
&lt;p&gt;3 站内搜索&lt;br&gt;配置了半天的百度搜索，只能说自己能力有限，最后懒得弄了，就没弄，如果有谁清楚，还请赐教。  &lt;/p&gt;
&lt;p&gt;4 目录序号错误&lt;br&gt;Hexo如果开启文章目录，会根据Markdown的##标记自动生成文章目录，并且自动添加序号，但是如果我们的文章中也使用了序号，那就会出现两个序号，如图：&lt;br&gt;&lt;img src=&quot;/images/2015.12.19.06.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;我解决这个问题是是通过js删除了序号，因为我对于nodejs不熟悉，所以不能从那上面改只能想其他的方法了。在博客的themes/jacman/layout/_partial/after_footer.ejs文件中添加如下代码，代码位置可以参看我的Github工程：  &lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 解决自动生成文章目录序号问题 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var regex = new RegExp(&quot;^\\d+\\.\\d* &quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var tocItemTextArray = $(&quot;.toc-article .toc-item .toc-text&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for (var i = 0; i &amp;lt; tocItemTextArray.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var item = tocItemTextArray[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  item.textContent = item.textContent.replace(regex, &quot;&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;5 回到顶部不显示&lt;br&gt;jacman主题默认是滚动距离超过1000才会显示回到顶部按钮，如果文章过短将永远不会显示，我这里改成了300，可以在themes/jacman/source/js/totop.js中修改如下属性为300：   &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;var upperLimit = 300;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;6 首页不展开配置&lt;br&gt;jacman提供在首页展开一部分文章，然后添加一个read more的提示。需要在jacman的配置文件中，找到如下配置，然后改成true，   &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;index:
  expand: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;  
  excerpt_link: Read More
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后需要在写文章的时候，在需要在首页截断显示的地方添加”&amp;lt;!–more–&gt;“标签   &lt;/p&gt;
&lt;p&gt;7 写文章即使预览功能&lt;br&gt;在写文章的时候可能需要经常修改在浏览器预览效果这时候可以分别启用两个终端，然后分别执行如下的两条命令，这样就能够在修改后立即预览最新的 内容      &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo generate –watch  #文件变动 立即重新生成&lt;br&gt;hexo server&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;终于把这个写完了好费劲。如果有什么问题可以找我交流。PS: 不清楚为什么在添加代码片段的过程中，总是会出现错误。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;已经好久没有写过博客了，主要是因为懒了。&lt;br&gt;前几天无聊点进了阿里云的广告里面，无意中看到了域名查询，查了一下自己的名字的域名，发现还没有注册（我原来记的这个域名是已经注册的了），然后就花钱买下了这个域名。然后因为这个买到的域名引出了了后面搭建博客的这么一堆事。  &lt;/p&gt;
&lt;p&gt;我自己已经有一个博客了，是在CSDN的博客，博客地址：&lt;a href=&quot;http://blog.csdn.net/mengxiangyue&quot;&gt;http://blog.csdn.net/mengxiangyue&lt;/a&gt;,那个博客维护了好久了，从大三开始吧。断断续续也写了好多年了，里面的文章我个人感觉水平也就一般。但是因为这些水平一般的文章，我也收获了很多，首先是收获了一个笔记吧，然后是申请成功了CSDN的博客（伪）专家，因为这个专家的身份，有时候会参加一些CSDN举办的活动。说到写博客，我个人感觉最重要的是技术的积累，我也跟很多人说过写博客这个事情，但是貌似听的人不是特别多。  &lt;/p&gt;
&lt;p&gt;好了貌似扯得有点远了，下面进入正题。&lt;br&gt;上面我已经说过我买了一个域名，那就大概梳理一下提纲吧：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;购买一个域名&lt;/li&gt;
&lt;li&gt;在github上面生成一个github pages的仓库&lt;/li&gt;
&lt;li&gt;搭建Hexo环境&lt;/li&gt;
&lt;li&gt;配置博客&lt;/li&gt;
&lt;li&gt;部署博客&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="工具" scheme="http://mengxiangyue.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Github" scheme="http://mengxiangyue.com/tags/Github/"/>
    
      <category term="Hexo" scheme="http://mengxiangyue.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
